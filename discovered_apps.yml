discovered-apps:
  get:
    summary: Get a list of discovered apps from the Advisor.
    description: >-
      Get a list of discovered apps from the Advisor.
      Requires a license.
    tags:
      - Discovered Apps
    parameters:
      - $ref: './common.yml#/parameters/query'
      - $ref: './common.yml#/parameters/range'
      - $ref: './common.yml#/parameters/orderBy'
      - $ref: './common.yml#/parameters/descending'
      - $ref: './common.yml#/parameters/filterBy'
    responses:
      '200':
        description: List of discovered apps.
        content:
          application/json:
            schema:
              $ref: '#/definitions/AppList'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
discovered-app-id:
  get:
    summary: Get the details of a discovered app.
    description: Get the details of a discovered app.
    tags:
      - Discovered Apps
    parameters:
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: App details.
        content:
          application/json:
            schema:
              $ref: '#/definitions/AppDetails'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
  delete:
    summary: Delete a discovered app.
    description: >-
      Delete a discovered app. 
      All data of that discovered data will be removed and it will not be listed anymore
      until it's discovered again.
    tags:
      - Discovered Apps
    parameters:
      - $ref: './common.yml#/parameters/id'
    responses:
      '204':
        description: Discovered app was deleted successfully.
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
discovered-app-id-entitlement-access:
  post:
    summary: Configure Entitlement Access to a Discovered App.
    description: Configure entitlement access to a discovered app.
    tags:
      - Discovered Apps
    parameters:
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Access is configured.
        content:
          application/json:
            schema:
              $ref: '#/definitions/AppDetails'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            description: Entitlement access details.
            type: object
            required:
              - name
            properties:
              name:
                type: string
                description: Entitlement name.
                example: Service
              disabled:
                type: boolean
                description: If true, the Entitlement will be disregarded during authorization.
                default: false
              tags:
                type: array
                description: Array of tags.
                items:
                  type: string
                example:
                  - developer
                  - api-created
              action:
                type: string
                description: Applied action to the app.
                default: allow
                enum:
                  - allow
                  - block
                  - alert
                  - exclude

discovered-app-id-policy-access:
  post:
    summary: Configure Policy Access to a Discovered App.
    description: Configure policy access to a discovered app.
    tags:
      - Discovered Apps
    parameters:
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Access is configured.
        content:
          application/json:
            schema:
              $ref: '#/definitions/AppDetails'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            description: Policy access configuration details.
            required:
              - policies
            properties:
              policies:
                type: array
                description: List of policies to configure.
                items:
                  oneOf:
                    - $ref: '#/components/schemas/ExistingPolicy'
                    - $ref: '#/components/schemas/NewDiscoveredPolicy'
                  discriminator:
                    propertyName: action
                    mapping:
                      AddToExisting: '#/components/schemas/ExistingPolicy'
                      CreateNew: '#/components/schemas/NewDiscoveredPolicy'
discovered-app-id-reset:
  post:
    summary: Reset discovered app
    description: Resets a discovered app
    tags:
      - Discovered Apps
    parameters:
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Data reset
      '400':
        $ref: './common.yml#/responses/BadRequestError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
discovered-app-start-analysis:
  post:
    summary: Trigger Application Discovery analysis
    description: Initiates an on-demand analysis of the current Application Discovery status.
    tags:
      - Discovered Apps
    responses:
      '200':
        description: Analysis started
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
discovered-app-stats:
  get:
    summary: Get Application Discovery stats
    description: Get Application Discovery stats from the Advisor.
    tags:
      - Discovered Apps
    responses:
      '200':
        description: Map of application stats
        content:
          application/json:
            schema:
              $ref: '#/definitions/AppStats'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
discovered-apps-sticky-filter:
  put:
    summary: Put Discovered Apps Sticky Filter
    description: Upserts with the given filter options.
    tags:
      - Discovered Apps
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/definitions/StickyFilter'
    responses:
      '200':
        description: The configured filter.
        content:
          application/json:
            schema:
              $ref: '#/definitions/StickyFilter'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
definitions:
  AppList:
    allOf:
      - $ref: './common.yml#/definitions/ResultList'
      - type: object
        description: Represents a list of discovered apps.
        properties:
          data:
            type: array
            description: List of discovered apps.
            items:
              $ref: '#/definitions/App'
          filter:
            allOf:
              - $ref: '#/definitions/StickyFilter'
              - type: object
                properties:
                  allOriginatingEntitlements:
                    $ref: '#/definitions/OriginatingEntitlements'
          filteredOutCount:
            type: integer
            description: Number of discovered apps excluded by the 'filter' property only.
            example: 30
  App:
    type: object
    description: Represents a discovered app.
    properties:
      id:
        type: string
        description: ID of the app.
        example: 181ff4c94fdce2a5
      host:
        type: string
        description: Host of the app.
        example: service.company.com
      port:
        type: integer
        description: Port of the app.
        example: 443
      usersCount:
        type: integer
        description: Total user count for the app.
        example: 1200
      lastAccessedAt:
        type: string
        format: date-time
        description: Timestamp of the last time the app was accessed by a user.
      entitlementName:
        type: string
        description: The name of the entitlement generated by using Application Discovery.
        example: entitlement
      lastModified:
        type: string
        format: date-time
        description: Timestamp of the last modification to this discovered app made through the application discovery page.
      originatingEntitlements:
        $ref: '#/definitions/OriginatingEntitlements'
      ips:
        type: array
        description: The IPs used to access the app.
        items:
          allOf:
            - type: string
              example: 10.98.10.40
  OriginatingEntitlements:
    type: array
    description: The entitlements that were used to access the app
    items:
      $ref: '#/definitions/OriginatingEntitlement'
  OriginatingEntitlement:
    type: object
    description: An entitlement that was used to access the application
    properties:
      name:
        type: string
        description: Name of the entitlement
        example: entitlement
      id:
        type: string
        format: uuid
  AppDetails:
    allOf:
      - $ref: '#/definitions/App'
      - type: object
        properties:
          rule:
            type: string
            description: The rule applied.
            example: allow
          protocol:
            type: string
            description: The protocol used.
            example: TCP
          direction:
            type: string
            description: The direction of the access.
            example: up
          users:
            type: array
            description: Users accessed this app.
            items:
              allOf:
                - $ref: './common.yml#/definitions/User'
                - type: object
                  properties:
                    lastAppAccessAt:
                      type: string
                      format: date-time
                      description: Timestamp of the last time the app was accessed by this user.
          hitChartData:
            type: array
            description: Data for hit count chart per day.
            items:
              type: object
              additionalProperties:
                type: number
                description: Number of hits for this day.
              example:
                2024-08-22: 256
          lastResetAt:
            type: string
            format: date-time
            description: Timestamp of the last time the app was reset.
          lastAnalysisAt:
            type: string
            format: date-time
            description: Timestamp of the last time the analysis is done for all apps.
          policies:
            type: array
            description: List of policies configured for access to this app.
            items:
              $ref: '#/definitions/AppAccessPolicy'
          entitlementDetails:
            type: object
            description: Details of the entitlement configuration for this app
            properties:
              id:
                type: string
                format: uuid
                description: The unique identifier of the entitlement
              tags:
                type: array
                description: List of tags associated with this entitlement
                items:
                  type: string
                example: [ "DevOps" ]
              disabled:
                type: boolean
                description: Whether this entitlement is currently disabled.
                example: false
            example:
              id: "550e8400-e29b-41d4-a716-446655440000"
              tags: [ "DevOps" ]
              disabled: false
          userGroups:
            type: object
            description: Maps users to group indices, with a corresponding array of group names for lookup.
            properties:
              usersToGroups:
                type: object
                description: Map of user distinguished names to their assigned group indices.
                additionalProperties:
                  type: array
                  items:
                    type: integer
                example:
                  "userdistinguishedname1": [ 1, 2 ]
                  "userdistinguishedname2": [ 1, 3 ]
              groups:
                type: array
                description: Array of group names.
                items:
                  type: string
                example:
                  - "group1"
                  - "group2"
                  - "group3"
  AppStats:
    type: object
    description: Represents statistics for discovered apps.
    properties:
      authentication:
        $ref: '#/definitions/AppStatsEntry'
      access:
        $ref: '#/definitions/AppStatsEntry'
      dns:
        $ref: '#/definitions/AppStatsEntry'
    example:
      authentication: {
        "latestEntryReceivedAt": "2024-08-24T14:15:22Z"
      }
      access: {
        "latestEntryReceivedAt": "2023-02-10T11:35:42Z"
      }
      dns: {
        "latestEntryReceivedAt": null
      }
  AppStatsEntry:
    type: object
    properties:
      latestEntryReceivedAt:
        type: string
        format: date-time
        description: When the most recent entry was added.
  StickyFilter:
    type: object
    description: The sticky filter applied to the list of discovered apps.
    properties:
      minimumUserCount:
        type: integer
        description: Controls the minimum user count threshold.
      includeALlWithBroadHostDefinitions:
        type: boolean
        description: Controls whether to return all originating entitlement sources.
      specificEntitlements:
        $ref: '#/definitions/SpecificEntitlements'
      includePublicIps:
        type: boolean
        description: Controls whether to include public IP addresses in the response. Set to false to return only RFC 1918 private IP addresses.
      includeNonDnsHostNames:
        type: boolean
        description: Controls whether to filter out IP address-identified hosts.
  SpecificEntitlements:
    type: array
    description: List of specific originating entitlements to filter apps by.
    items:
      $ref: '#/definitions/OriginatingEntitlement'
  AppAccessPolicy:
    type: object
    description: Policy configured for app access.
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: uuid
        description: The ID of the Policy.
      name:
        type: string
        description: The name of the Policy.

components:
  schemas:
    ExistingPolicy:
      type: object
      description: Access will be granted by assigning the generated Entitlement to an existing Policy.
      properties:
        action:
          type: string
          enum: [ AddToExisting ]
        id:
          type: string
          format: uuid
          x-uuid-ref: Policy
          description: Policy ID.
    NewDiscoveredPolicy:
      type: object
      description: Access will be granted by creating a new Policy for the generated Entitlement.
      properties:
        action:
          type: string
          enum: [ CreateNew ]
        name:
          type: string
          description: Policy name.
          example: Service
        group:
          type: string
          description: The group to assign the app to. The Policy created will use this group in its criteria.
          example: Accounting
        provider:
          type: string
          description: The Identity Provider name to assign the app to. The Policy created will use this provider in its criteria.
