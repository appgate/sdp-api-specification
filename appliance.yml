appliances:
  get:
    summary: List all Appliances.
    description: List all Appliances visible to current user.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/query'
      - $ref: './common.yml#/parameters/range'
      - $ref: './common.yml#/parameters/orderBy'
      - $ref: './common.yml#/parameters/descending'
      - $ref: './common.yml#/parameters/filterBy'
    responses:
      '200':
        description: List of Appliances.
        content:
          application/json:
            schema:
              $ref: '#/definitions/ApplianceList'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
  post:
    summary: Create a new inactive Appliance.
    description: Create a new inactive Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
    responses:
      '200':
        description: Created Appliance.
        content:
          application/json:
            schema:
              $ref: '#/definitions/Appliance'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '409':
        $ref: './common.yml#/responses/ConflictError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/Appliance'
appliances-id:
  get:
    summary: Get a specific Appliance.
    description: Get a specific Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Single Appliance.
        content:
          application/json:
            schema:
              $ref: '#/definitions/Appliance'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
  put:
    summary: Update an existing Appliance.
    description: Update an existing Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Updated Appliance.
        content:
          application/json:
            schema:
              $ref: '#/definitions/Appliance'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/Appliance'
  delete:
    summary: Delete a specific Appliance.
    description: Delete a specific Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '204':
        description: Appliance was deleted successfully.
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
appliances-export:
  post:
    summary: Export JSON seed for an inactive Appliance.
    description: Export JSON seed for an inactive Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
      - $ref: '#/parameters/latestVersion'
    responses:
      '200':
        description: Exported JSON Appliance seed. Body must be saved as seed.json file.
        content:
          application/json:
            schema:
              type: object
              description: The JSON seed used for activation of the appliance.
              properties: {}
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/SshConfig'
appliances-export-iso:
  post:
    summary: Export ISO seed for an inactive Appliance.
    description: Export ISO seed for an inactive Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
      - $ref: '#/parameters/latestVersion'
    responses:
      '200':
        description: Exported ISO Appliance seed.
        content:
          application/json:
            schema:
              $ref: '#/definitions/ApplianceSeed'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/SshConfig'
appliances-renew-certificate:
  post:
    summary: Renew certificate of an active Appliance.
    description: Renew certificate of an active Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '204':
        description: Certificate renewal process started successfully.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
appliances-admin-interface-p12:
  post:
    summary: Upload and apply HTTPS certificate on the admin interface of an active Appliance.
    description: Upload and apply HTTPS certificate on the admin interface of an active Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '204':
        description: P12 file is accepted and applied.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/P12'
appliances-deactivate:
  post:
    summary: Deactivate an active Appliance.
    description: Deactivate an active Appliance. If the appliance is still reachable, it will get a wipe command.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
      - name: wipe
        in: query
        description: Sends wipe command to the Appliance. Equivalent to 'cz-config wipe-appliance' command on the Appliance. True by default.
        schema:
          type: boolean
          default: true
    responses:
      '204':
        description: Appliance was deactivated successfully.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
appliances-reboot:
  post:
    summary: Reboot an active Appliance.
    description: Reboot an active Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '204':
        description: Appliance received the reboot command successfully.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
appliances-test-resolver-name:
  post:
    summary: Test a resolver name on a Gateway.
    description: Test a resolver name on a Gateway.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Test is completed successfully.
        content:
          application/json:
            schema:
              type: object
              description: The test result.
              properties:
                ips:
                  type: array
                  description: List of IPs resolved for the given name.
                  items:
                    type: string
                    example: 10.0.0.1
                error:
                  type: string
                  description: Error message if the resolution failed.
                  example: "DNS name resolution error for ipv4, pycares errno 11: Could not contact DNS servers"
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '409':
        $ref: './common.yml#/responses/ConflictError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      description: What to test on name resolvers.
      content:
        application/json:
          schema:
            properties:
              resourceName:
                type: string
                description: The resource name to test on the Gateway.
                example: "aws://tag:Application=Software Defined Perimeter"
appliances-switch-partition:
  post:
    summary: Switch partition on the Appliance, regardless of the upgrade status.
    description: Reboot and switch partition on the Appliance.
    tags:
      - Appliance
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '202':
        description: Appliance accepted the command and started the process for switching partitions.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
appliances-name-resolution-status:
  get:
    summary: Get the status of name resolution on a Gateway.
    description: >-
      Get the status of name resolution on a Gateway.
      It lists all the subscribed resource names from all the connected Clients and shows the resolution results.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Gateway returned the status successfully.
        content:
          application/json:
            schema:
              type: object
              description: The name resolution status.
              properties:
                resolutions:
                  type: object
                  description: Dictionary of resource name and respective results.
                  example:
                    aws://lb-tag:kubernetes.io/service-name=opsnonprod/erp-dev:
                      partial: false
                      finals:
                        - 3.120.51.78
                        - 35.156.237.184
                      partials:
                        - dns://all.GW-ELB-2001535196.eu-central-1.elb.amazonaws.com
                        - dns://all.purple-lb-1785267452.eu-central-1.elb.amazonaws.com
                      errors: []
                  additionalProperties:
                    type: object
                    description: Resolution result.
                    properties:
                      partial:
                        type: boolean
                        description: Whether the resolution is for the resource is complete or partial.
                      finals:
                        type: array
                        description: Completely resolved IPs.
                        items:
                          type: string
                        example:
                          - 3.120.51.78
                          - 35.156.237.184
                      partials:
                        type: array
                        description: Partially resolved names.
                        items:
                          type: string
                        example:
                          - dns://all.GW-ELB-2001535196.eu-central-1.elb.amazonaws.com
                          - dns://all.purple-lb-1785267452.eu-central-1.elb.amazonaws.com
                      errors:
                        type: array
                        description: Errors occurred during resolution.
                        items:
                          type: string
                          example: Invalid hostname
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'

parameters:
  latestVersion:
    name: latestVersion
    in: query
    description: >-
      If the Appliance object created on an old Controller and the version field is older than the current peer version,
      Controller generates a seed for that specific version.
      Adding this parameter overrides the version to the current one.
    schema:
      type: boolean

requestBodies:
  Appliance:
    content:
      application/json:
        schema:
          $ref: '#/definitions/Appliance'
    description: Appliance object.
    required: true
  SshConfig:
    content:
      application/json:
        schema:
          type: object
          description: SSH configuration details. Fill one of the fields to configure the SSH server on the appliance.
          properties:
            provideCloudSSHKey:
              type: boolean
              description: Tells appliance to use the key generated by AWS or Azure.
            sshKey:
              type: string
              description: SSH public key to allow.
              example: 'ssh-rsa ....'
            password:
              type: string
              description: Appliance's CZ user password.
              example: 'tSW3!QBv(rj{UuLY'
    description: SSH configuration during seeding.
    required: true
  P12:
    content:
      application/json:
        schema:
          type: object
          description: P12 binary object.
          properties:
            p12:
              type: string
              format: byte
              description: P12 binary in Base64 format.
            password:
              type: string
              description: Password for the p12 file.
              default: ''
    required: true

definitions:
  ApplianceList:
    allOf:
      - $ref: './common.yml#/definitions/ResultList'
      - type: object
        description: Represents a list of Appliances.
        properties:
          data:
            type: array
            description: List of Appliances.
            items:
              $ref: '#/definitions/Appliance'
  Appliance:
    allOf:
      - $ref: './common.yml#/definitions/BaseEntity'
      - type: object
        description: Represents an Appliance.
        required:
          - hostname
          - clientInterface
          - peerInterface
          - networking
        properties:
          activated:
            type: boolean
            readOnly: true
            description: >-
              Whether the Appliance is activated or not.
              If it is not activated, it won't be accessible by the Clients.
          pendingCertificateRenewal:
            type: boolean
            readOnly: true
            description: >-
              Whether the Appliance is pending certificate renewal or not. Should be true for a very short period on certificate renewal.
            example: false
          version:
            type: integer
            readOnly: true
            description: Peer version of the Appliance.
            example: 9
          hostname:
            type: string
            description: Generic hostname of the appliance. Used as linux hostname and to identify within logs.
            example: 'appgate.company.com'
          site:
            type: string
            format: uuid
            x-uuid-ref: Site
            description: >-
              Site served by the Appliance.
              Entitlements on this Site will be included in the Entitlement Token for this Appliance.
              Not useful if Gateway role is not enabled.
            example: 4c07bc67-57ea-42dd-b702-c2d6c45419fc
          siteName:
            type: string
            readOnly: true
            description: Name of the Site for this Appliance. For convenience only.
            example: Default Site
          customization:
            type: string
            x-uuid-ref: ApplianceCustomization
            format: uuid
            description: Customization assigned to this Appliance.
            example: 4c07bc67-57ea-42dd-b702-c2d6c45419fc
          connectToPeersUsingClientPortWithSpa:
            type: boolean
            description: >-
              Makes the Appliance to connect to Controller/LogServer/LogForwarders using their clientInterface.httpsPort instead of peerInterface.httpsPort.
              The Appliance uses SPA to connect.
            default: true
          clientInterface:
            type: object
            description: The details of the Client connection interface.
            required:
              - hostname
            properties:
              proxyProtocol:
                description: To enable/disable Proxy protocol on this Appliance.
                type: boolean
                default: false
              hostname:
                type: string
                description: Hostname to connect by the Clients. It will be used to validate the Appliance Certificate.
                example: 'appgate.company.com'
              httpsPort:
                type: integer
                description: Port to connect for the Client specific services.
                default: 443
              dtlsPort:
                type: integer
                description: Port to connect for the Clients that connects to vpnd on DTLS if enabled.
                default: 443
              allowSources:
                $ref: '#/definitions/AllowSources'
              overrideSpaMode:
                type: string
                description: Override SPA mode for this appliance.
                enum:
                  - Disabled
                  - TCP
                  - 'UDP-TCP'
          peerInterface:
            type: object
            description: The details of peer connection interface. Used by other appliances and administrative UI.
            required:
              - hostname
            properties:
              hostname:
                type: string
                description: Hostname to connect by the peers. It will be used to validate the appliance certificate.
                example: 'appgate.company.com'
              httpsPort:
                type: integer
                description: Port to connect for peer specific services.
                default: 444
              allowSources:
                $ref: '#/definitions/AllowSources'
          adminInterface:
            type: object
            description: The details of the admin connection interface. If null, admin interface will be accessible via peerInterface.
            required:
              - hostname
              - httpsCiphers
            properties:
              hostname:
                type: string
                description: Hostname to connect to the admin interface. This hostname will be used to validate the appliance certificate.
                example: "appgate.company.com"
              httpsPort:
                type: integer
                description: Port to connect for admin services.
                default: 8443
              httpsCiphers:
                type: array
                description: 'The type of TLS ciphers to allow. See: https://www.openssl.org/docs/man1.0.2/apps/ciphers.html for all supported ciphers.'
                items:
                  type: string
                default:
                  - "ECDHE-RSA-AES256-GCM-SHA384"
                  - "ECDHE-RSA-AES128-GCM-SHA256"
              allowSources:
                $ref: '#/definitions/AllowSources'
          networking:
            type: object
            description: Networking configuration of the system.
            properties:
              hosts:
                type: array
                description: '/etc/hosts configuration'
                items:
                  type: object
                  required:
                    - hostname
                    - address
                  properties:
                    hostname:
                      type: string
                      description: Hostname to map IP to.
                      example: 'internal.service.company.com'
                    address:
                      type: string
                      description: IP for the given hostname for appliance to resolve.
                      example: '10.10.10.10'
              nics:
                type: array
                description: System NIC configuration
                items:
                  type: object
                  required:
                    - name
                  properties:
                    enabled:
                      type: boolean
                      description: Whether the NIC is active or not.
                      example: true
                    name:
                      type: string
                      description: NIC name
                      example: 'eth0'
                    ipv4:
                      type: object
                      description: IPv4 settings for this NIC.
                      properties:
                        dhcp:
                          type: object
                          description: IPv4 DHCP configuration for the NIC.
                          properties:
                            enabled:
                              type: boolean
                              description: Whether DHCP for IPv4 is enabled.
                            dns:
                              type: boolean
                              description: Whether to use DHCP for setting IPv4 DNS settings on the appliance.
                            routers:
                              type: boolean
                              description: Whether to use DHCP for setting IPv4 default gateway on the appliance.
                            ntp:
                              type: boolean
                              description: Whether to use DHCP for setting NTP on the appliance.
                            mtu:
                              type: boolean
                              description: Whether to use DHCP for setting MTU on the appliance.
                        static:
                          type: array
                          description: IPv4 static NIC configuration for the NIC.
                          required:
                            - address
                            - netmask
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                                description: IPv4 Address of the network interface.
                                example: '10.10.10.1'
                              netmask:
                                type: integer
                                description: Netmask of the network interface.
                                example: 24
                              hostname:
                                type: string
                                description: NIC hostname.
                                example: 'appgate.company.com'
                              snat:
                                type: boolean
                                description: Enable SNAT on this IP.
                        virtualIp:
                          type: string
                          description: Virtual IP to use for IPv4.
                          example: '10.10.10.24'
                    ipv6:
                      type: object
                      description: IPv6 settings for this NIC.
                      properties:
                        dhcp:
                          type: object
                          description: IPv6 DHCP configuration for the NIC.
                          properties:
                            enabled:
                              type: boolean
                              description: Whether DHCP for IPv6 is enabled.
                            dns:
                              type: boolean
                              description: Whether to use DHCP for setting IPv6 DNS settings on the Appliance.
                            ntp:
                              type: boolean
                              description: Whether to use DHCP for setting NTP on the appliance.
                            mtu:
                              type: boolean
                              description: Whether to use DHCP for setting MTU on the appliance.
                        static:
                          type: array
                          description: IPv6 static NIC configuration for the NIC.
                          items:
                            type: object
                            required:
                              - address
                              - netmask
                            properties:
                              address:
                                type: string
                                description: IPv6 Address of the network interface.
                                example: '2001:db8:0:0:0:ff00:42:8329'
                              netmask:
                                type: integer
                                description: Netmask of the network interface.
                                example: 24
                              hostname:
                                type: string
                                description: NIC hostname.
                                example: 'appgate.company.com'
                              snat:
                                type: boolean
                                description: Enable SNAT on this IP.
                        virtualIp:
                          type: string
                          description: Virtual IP to use for IPv6.
                          example: '2001:db8:0:0:0:ff00:42:8400'
                    mtu:
                      type: integer
                      description: MTU setting for the NIC. If left empty, appliance default will be used.
                      example: 1500
              dnsServers:
                type: array
                description: DNS Server addresses.
                items:
                  type: string
                example:
                  - '172.17.18.19'
                  - '192.100.111.31'
              dnsDomains:
                type: array
                description: DNS Search domains.
                items:
                  type: string
                example:
                  - 'internal.company.com'
              routes:
                type: array
                description: System route settings.
                items:
                  type: object
                  required:
                    - address
                    - netmask
                  properties:
                    address:
                      type: string
                      description: Address to route.
                      example: '10.0.0.0'
                    netmask:
                      type: integer
                      description: Netmask for the subnet to route.
                      example: 24
                    gateway:
                      type: string
                      description: Gateway to use for routing.
                      example: '10.0.0.254'
                    nic:
                      type: string
                      description: NIC name to use for routing.
                      example: 'eth0'
          ntp:
            type: object
            description: NTP configuration.
            properties:
              servers:
                type: array
                items:
                  type: object
                  description: NTP server.
                  required:
                    - hostname
                  properties:
                    hostname:
                      type: string
                      description: Hostname or IP of the NTP server.
                      example: '0.ubuntu.pool.ntp.org'
                    keyType:
                      type: string
                      description: Type of key to use for secure NTP communication.
                      enum:
                        - MD5
                        - SHA
                        - SHA1
                        - SHA256
                        - SHA512
                        - RMD160
                    key:
                      format: password
                      type: string
                      description: Key to use for secure NTP communication.
          sshServer:
            type: object
            description: SSH server configuration.
            properties:
              enabled:
                type: boolean
                description: Whether the SSH Server is enabled on this appliance or not.
                default: false
              port:
                type: integer
                description: SSH port.
                default: 22
              allowSources:
                $ref: '#/definitions/AllowSources'
              passwordAuthentication:
                type: boolean
                description: Whether SSH allows password authentication or not.
                default: true
          snmpServer:
            type: object
            description: SNMP Server configuration.
            properties:
              enabled:
                type: boolean
                description: Whether the SNMP Server os enabled on this appliance or not.
                default: false
              tcpPort:
                type: integer
                description: TCP port for SNMP Server.
                example: 161
              udpPort:
                type: integer
                description: UDP port for SNMP Server.
                example: 161
              snmpd.conf:
                description: Raw SNMP configuration.
                type: string
              allowSources:
                $ref: '#/definitions/AllowSources'
          healthcheckServer:
            type: object
            description: Healthcheck Server configuration.
            properties:
              enabled:
                type: boolean
                description: Whether the Healthcheck Server is enabled on this appliance or not.
                default: false
              port:
                type: integer
                description: Port to connect for Healthcheck Server.
                default: 5555
              allowSources:
                $ref: '#/definitions/AllowSources'
          prometheusExporter:
            type: object
            description: Prometheus Exporter configuration.
            properties:
              enabled:
                type: boolean
                description: Whether the Prometheus Exporter is enabled on this appliance or not.
                default: false
              port:
                type: integer
                description: Port to connect for Prometheus Exporter.
                default: 5556
              allowSources:
                $ref: '#/definitions/AllowSources'
          ping:
            type: object
            description: Rules for allowing ping.
            properties:
              allowSources:
                $ref: '#/definitions/AllowSources'
          logServer:
            type: object
            description: Log Server settings. Log Server collects audit logs from all the appliances and stores them.
            properties:
              enabled:
                type: boolean
                description: Whether the Log Server is enabled on this appliance or not.
                default: false
              retentionDays:
                type: integer
                description: How many days of audit logs will be kept.
                default: 30
          controller:
            type: object
            description: Controller settings.
            properties:
              enabled:
                type: boolean
                description: Whether the Controller is enabled on this appliance or not.
                default: false
          gateway:
            type: object
            description: Gateway settings.
            properties:
              enabled:
                type: boolean
                description: Whether the Gateway is enabled on this appliance or not.
                default: false
              vpn:
                type: object
                description: VPN configuration.
                properties:
                  weight:
                    type: integer
                    description: Load balancing weight.
                    default: 100
                  allowDestinations:
                    type: array
                    description: Destinations to allow tunnels to.
                    items:
                      type: object
                      required:
                        - nic
                      properties:
                        address:
                          type: string
                          description: IP address to allow connection.
                          example: '192.168.111.0'
                        netmask:
                          type: integer
                          description: Netmask to use with address for allowing connections.
                          example: 24
                        nic:
                          type: string
                          description: NIC name to accept connections on.
                          example: 'eth1'
          logForwarder:
            type: object
            description: LogForwarder settings. LogForwarder collects audit logs from the appliances in the given sites and sends them to the given endpoints.
            properties:
              enabled:
                type: boolean
                description: Whether the LogForwarder is enabled on this appliance or not.
                default: false
              elasticsearch:
                allOf:
                  - $ref: '#/definitions/AwsBase'
                  - type: object
                    description: Elasticsearch endpoint configuration on AWS.
                    required:
                      - url
                    properties:
                      url:
                        type: string
                        description: The URL of the elasticsearch server.
                        example: 'https://aws.com/elasticsearch/instance/asdaxllkmda64'
                      retentionDays:
                        type: integer
                        description: Optional field to enable log retention on the configured AWS elasticsearch. Defines how many days the audit logs will be kept.
                        example: 30
              tcpClients:
                type: array
                description: TCP endpoints to connect and send the audit logs with the given format.
                items:
                  $ref: '#/definitions/TcpClient'
              awsKineses:
                type: array
                description: AWS Kinesis endpoints to connect and send the audit logs with the given format.
                items:
                  $ref: '#/definitions/AwsKinesis'
              sites:
                type: array
                description: The sites to collect logs from and forward.
                items:
                  type: string
                  format: uuid
                  x-uuid-ref: Site
                  description: >
                    UUID of a site.
                    Use '6f6fa9d9-17b2-4157-9f68-e97662acccdf' to collect logs from all the appliances.
                    Use '6263435b-c9f6-4b7f-99f8-37e2e6b006a9' to collect logs from appliances without a site.
          connector:
            type: object
            description: Connector settings.
            properties:
              enabled:
                type: boolean
                description: Whether the Connector is enabled on this appliance or not.
                default: false
              expressClients:
                type: array
                description: >-
                  A list of Clients to run on the appliance with the given configuration.
                  The Clients will get the necessary tokens automatically according to the Site assigned to this Appliance.
                  Currently only one allowed.
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: Name for the Client. It will be mapped to the user claim 'clientName'.
                      example: Printers
                    deviceId:
                      type: string
                      format: uuid
                      description: The device ID to assign to this Client. It will be used to generate device distinguished name.
                      example: 12699e27-b584-464a-81ee-5b4784b6d425
                    allowResources:
                      type: array
                      description: A list of subnets to allow access via Client.
                      items:
                        type: object
                        required:
                          - address
                          - netmask
                        properties:
                          address:
                            type: string
                            description: IP address
                            example: '0.0.0.0'
                          netmask:
                            type: integer
                            description: netmask
                            example: 32
                    snatToResources:
                      type: boolean
                      description: Use Source NAT for the resources.
                      default: true
              advancedClients:
                type: array
                description: A list of Clients to run on the appliance with the given configuration. Requires manual Policy configuration.
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: Name for the Client. It will be mapped to the user claim 'clientName'.
                      example: Printers
                    deviceId:
                      type: string
                      format: uuid
                      description: The device ID to assign to this Client. It will be used to generate device distinguished name.
                      example: 12699e27-b584-464a-81ee-5b4784b6d425
                    allowResources:
                      $ref: '#/definitions/AllowSources'
                    snatToTunnel:
                      type: boolean
                      description: Use Source NAT for the Client tunnel.
                      default: true
          rsyslogDestinations:
            type: array
            description: Rsyslog destination settings to forward appliance logs.
            items:
              type: object
              required:
                - destination
              properties:
                selector:
                  type: string
                  description: Rsyslog selector.
                  example: ':msg, contains, "[AUDIT]"'
                  default: '*.*'
                template:
                  type: string
                  description: Rsyslog template to forward logs with.
                  example: "%msg:9:$%\n"
                  default: '%HOSTNAME% %msg%'
                destination:
                  type: string
                  description: Rsyslog server destination.
                  example: '@@10.10.10.2'
          hostnameAliases:
            type: array
            description: >-
              Hostname aliases. They are added to the Appliance certificate as Subject Alternative Names so it is
              trusted using different IPs or hostnames.
              Requires manual certificate renewal to apply changes to the certificate.
            items:
              type: string
            example:
              - 'appgatealias.company.com'
              - 'alias2.appgate.company.com'
  AllowSources:
    type: array
    description: Source configuration to allow via iptables.
    items:
      type: object
      properties:
        address:
          type: string
          description: IP address to allow connection.
          example:
            - '0.0.0.0'
            - '::'
        netmask:
          type: integer
          description: Netmask to use with address for allowing connections.
          example: 0
        nic:
          type: string
          description: NIC name to accept connections on.
          example: 'eth0'
  AwsBase:
    type: object
    properties:
      awsId:
        type: string
        description: AWS ID to login. Only required if AWS Access Keys are being used to authenticate.
      awsSecret:
        format: password
        type: string
        description: AWS secret to login. Only required if AWS Access Keys are being used to authenticate.
        writeOnly: true
      awsRegion:
        type: string
        description: AWS region. Only required if AWS Access Keys are being used to authenticate.
        example: eu-west-2
      useInstanceCredentials:
        type: boolean
        description: Whether to use the credentials from the AWS instance or not.
  AwsKinesis:
    allOf:
      - $ref: '#/definitions/AwsBase'
      - type: object
        required:
          - type
          - streamName
        properties:
          type:
            type: string
            description: AWS Kinesis type
            enum:
              - Stream
              - Firehose
          streamName:
            type: string
            description: Name of the stream.
            example: Appgate_SDP_audit
          batchSize:
            type: integer
            description: Batch size for the stream. Used only for "Stream" type.
            default: 400
          numberOfPartitionKeys:
            type: integer
            description: Number of partition keys to use for the stream. Used only for "Stream" type.
            default: 10
          filter:
            type: string
            description: JMESPath expression to filter audit logs to forward.
            example: "event_type=='authentication_succeeded'"
  TcpClient:
    type: object
    required:
      - name
      - host
      - port
      - format
    properties:
      name:
        type: string
        description: Name of the endpoint.
        example: Company SIEM
      host:
        type: string
        description: Hostname or the IP address of the endpoint.
        example: siem.company.com
      port:
        type: integer
        description: Port of the endpoint.
        example: 8888
      format:
        type: string
        description: The format to send the audit logs.
        enum:
          - json
          - syslog
      useTLS:
        type: boolean
        description: Whether to use TLS to connect to endpoint or not. If enabled, make sure the LogForwarder appliance trusts the certificate of the endpoint.
      filter:
        type: string
        description: JMESPath expression to filter audit logs to forward.
        example: "event_type=='authentication_succeeded'"
  ApplianceSeed:
    type: object
    description: The ISO file blob in JSON.
    properties:
      iso:
        type: string
        format: byte
        description: The ISO file in base64 format. Response must be Base64 decoded and saved as an ISO file.
