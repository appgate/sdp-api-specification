appliances:
  get:
    summary: List all Appliances.
    description: List all Appliances visible to current user.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/query'
      - $ref: './common.yml#/parameters/range'
      - $ref: './common.yml#/parameters/orderBy'
      - $ref: './common.yml#/parameters/descending'
      - $ref: './common.yml#/parameters/filterBy'
    responses:
      '200':
        description: List of Appliances.
        content:
          application/json:
            schema:
              $ref: '#/definitions/ApplianceList'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
  post:
    summary: Create a new inactive Appliance.
    description: Create a new inactive Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
    responses:
      '200':
        description: Created Appliance.
        content:
          application/json:
            schema:
              $ref: '#/definitions/Appliance'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '402':
        $ref: './common.yml#/responses/PaymentError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '409':
        $ref: './common.yml#/responses/ConflictError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/Appliance'
appliances-id:
  get:
    summary: Get a specific Appliance.
    description: Get a specific Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Single Appliance.
        content:
          application/json:
            schema:
              $ref: '#/definitions/Appliance'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
  put:
    summary: Update an existing Appliance.
    description: Update an existing Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Updated Appliance.
        content:
          application/json:
            schema:
              $ref: '#/definitions/Appliance'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '402':
        $ref: './common.yml#/responses/PaymentError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/Appliance'
  delete:
    summary: Delete a specific Appliance.
    description: Delete a specific Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '204':
        description: Appliance was deleted successfully.
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
appliances-status:
  get:
    summary: Get Appliances with live stats and status.
    description: >-
      Get appliances with stats and status.
      By default, this API makes the controller to query every active appliance for status.
      The operation may take long if one or more appliances take long to respond. Using FilterBy
      to query only a subset of appliances for status can speed this up.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/query'
      - $ref: './common.yml#/parameters/range'
      - $ref: './common.yml#/parameters/orderBy'
      - $ref: './common.yml#/parameters/descending'
      - $ref: './common.yml#/parameters/filterBy'
    responses:
      '200':
        description: Appliances with stats and status.
        content:
          application/json:
            schema:
              $ref: '#/definitions/ApplianceWithStatusList'

      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
appliances-export:
  post:
    summary: Export JSON seed for an inactive Appliance.
    description: Export JSON seed for an inactive Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Exported JSON Appliance seed. Body must be saved as seed.json file.
        content:
          application/json:
            schema:
              type: object
              description: The JSON seed used for activation of the appliance.
              properties: { }
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/ExportSeedConfig'
appliances-export-iso:
  post:
    summary: Export ISO seed for an inactive Appliance.
    description: Export ISO seed for an inactive Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Exported ISO Appliance seed.
        content:
          application/json:
            schema:
              $ref: '#/definitions/ApplianceSeedISO'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/ExportSeedConfig'
appliances-renew-certificate:
  post:
    summary: Renew certificate of an active Appliance.
    description: Renew certificate of an active Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '202':
        $ref: './common.yml#/responses/ChangeId'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
appliances-deactivate:
  post:
    summary: Deactivate an active Appliance.
    description: Deactivate an active Appliance. If the appliance is still reachable, it will get a wipe command.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
      - name: wipe
        in: query
        description: Sends wipe command to the Appliance. Equivalent to 'cz-config wipe-appliance' command on the Appliance. True by default.
        schema:
          type: boolean
          default: true
    responses:
      '202':
        $ref: './common.yml#/responses/ChangeId'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
appliances-reboot:
  post:
    summary: Reboot an active Appliance.
    description: Reboot an active Appliance.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '202':
        $ref: './common.yml#/responses/ChangeId'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
appliances-test-resolver-name:
  post:
    summary: Test a resolver name on a Gateway.
    description: Test a resolver name on a Gateway.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Test is completed successfully.
        content:
          application/json:
            schema:
              type: object
              description: The test result.
              properties:
                ips:
                  type: array
                  description: List of IPs resolved for the given name.
                  items:
                    type: string
                    example: 10.0.0.1
                error:
                  type: string
                  description: Error message if the resolution failed.
                  example: "DNS name resolution error for ipv4, pycares errno 11: Could not contact DNS servers"
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      description: What to test on name resolvers.
      content:
        application/json:
          schema:
            properties:
              resourceName:
                type: string
                description: The resource name to test on the Gateway.
                example: "aws://tag:Application=Software Defined Perimeter"
appliances-ping-command:
  post:
    summary: Runs ICMP ping command on an Appliance.
    description: >-
      Runs ICMP ping command on an Appliance.
      This API call must be made with **Accept** header of **application/vnd.appgate.peer-v20+text** as it returns plain text instead of JSON.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Command ran successfully.
        content:
          text/plain:
            schema:
              type: string
              description: The ping result.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      description: Ping parameters
      content:
        application/json:
          schema:
            required:
              - destination
            properties:
              destination:
                type: string
                description: The destination to ping.
                example: 8.8.8.8
              interface:
                type: string
                description: The network interface to use for pinging.
                example: eth0
              processTimeout:
                type: integer
                description: The number of replies to wait for.
                default: 5
appliances-tcpdump-command:
  post:
    summary: Runs tcpdump command on an Appliance.
    description: >-
      Runs tcpdump command on an Appliance.
      This API call must be made with **Accept** header of **application/vnd.appgate.peer-v20+text** as it returns plain text instead of JSON.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Command ran successfully.
        content:
          text/plain:
            schema:
              type: string
              description: The tcpdump result.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      description: Tcpdump parameters
      content:
        application/json:
          schema:
            properties:
              expression:
                type: string
                description: The expression to filter tcpdump.
                example: udp
              interface:
                type: string
                description: The network interface to tcpdump on.
                example: eth0
              processTimeout:
                type: integer
                description: The number of seconds to run/wait before timing out.
                default: 30
appliances-netcat-command:
  post:
    summary: Runs netcat command on an Appliance.
    description: >-
      Run netcat command on an Appliance.
      This API call must be made with **Accept** header of **application/vnd.appgate.com.peer-v20+text** as it returns plain text instead of JSON.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Command ran successfully.
        content:
          text/plain:
            schema:
              type: string
              description: The netcat result.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      description: Netcat parameters
      content:
        application/json:
          schema:
            required:
              - destination
              - port
            properties:
              destination:
                type: string
                description: The destination to connect. Can be numerical IP address or a symbolic hostname.
                example: appgate.com
              port:
                type: integer
                description: The port to run command.
                example: 443
              version:
                type: integer
                description: Select IP version explicitly.
                enum: [ 4, 6 ]
              protocol:
                type: string
                description: Select protocol.
                default: TCP
                enum: [ UDP, TCP ]
              processTimeout:
                type: integer
                description: The number of seconds to run/wait before timing out.
                default: 10
appliances-dig-command:
  post:
    summary: Runs dig command on an Appliance.
    description: >-
      Run dig command on an Appliance.
      This API call must be made with **Accept** header of **application/vnd.appgate.com.peer-v20+text** as it returns plain text instead of JSON.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Command ran successfully.
        content:
          text/plain:
            schema:
              type: string
              description: The dig result.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      description: Dig parameters
      content:
        application/json:
          schema:
            required:
              - host
            properties:
              host:
                type: string
                description: The host to query.
                example: appgate.com
              server:
                type: string
                description: The DNS server to use for querying.
                example: 1.1.1.1
              type:
                type: string
                description: Select DNS request type.
                default: A
                enum:
                  - "*"
                  - A
                  - A6
                  - AAAA
                  - AFSDB
                  - AMTRELAY
                  - APL
                  - ATMA
                  - AVC
                  - AXFR
                  - CAA
                  - CDNSKEY
                  - CDS
                  - CERT
                  - CNAME
                  - CSYNC
                  - DHCID
                  - DLV
                  - DNAME
                  - DNSKEY
                  - DOA
                  - DS
                  - EID
                  - EUI48
                  - EUI64
                  - GID
                  - GPOS
                  - HINFO
                  - HIP
                  - HTTPS
                  - IPSECKEY
                  - ISDN
                  - IXFR
                  - KEY
                  - KX
                  - L32
                  - L64
                  - LOC
                  - LP
                  - MAILA
                  - MAILB
                  - MB
                  - MD
                  - MF
                  - MG
                  - MINFO
                  - MR
                  - MX
                  - NAPTR
                  - NID
                  - NIMLOC
                  - NINFO
                  - NS
                  - NSAP
                  - NSAP-PTR
                  - NSEC
                  - NSEC3
                  - NSEC3PARAM
                  - "NULL"
                  - NXT
                  - OPENPGPKEY
                  - OPT
                  - PTR
                  - PX
                  - RKEY
                  - RP
                  - RRSIG
                  - RT
                  - SIG
                  - SINK
                  - SMIMEA
                  - SOA
                  - SPF
                  - SRV
                  - SSHFP
                  - SVCB
                  - TA
                  - TALINK
                  - TKEY
                  - TLSA
                  - TSIG
                  - TXT
                  - UID
                  - UINFO
                  - UNSPEC
                  - URI
                  - WKS
                  - X25
                  - ZONEMD
              protocol:
                type: string
                description: Select protocol.
                default: UDP
                enum: [ UDP, TCP ]
              processTimeout:
                type: integer
                description: The number of seconds to run/wait before timing out.
                default: 5
appliances-ip-command:
  post:
    summary: Runs ip route show command on an Appliance.
    description: >-
      Run ip route show command on an Appliance.
      This API call must be made with **Accept** header of **application/vnd.appgate.com.peer-v20+text** as it returns plain text instead of JSON.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Command ran successfully.
        content:
          text/plain:
            schema:
              type: string
              description: The ip route show result.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      description: IP parameters
      content:
        application/json:
          schema:
            properties:
              version:
                type: integer
                description: Select IP version.
                enum: [ 4, 6 ]
                default: 4
              processTimeout:
                type: integer
                description: The number of seconds to run/wait before timing out.
                default: 5
appliances-addressshow-command:
  post:
    summary: Runs addressshow command on an Appliance.
    description: >-
      Run addressshow command on an Appliance.
      This API call must be made with **Accept** header of **application/vnd.appgate.com.peer-v20+text** as it returns plain text instead of JSON.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Command ran successfully.
        content:
          text/plain:
            schema:
              type: string
              description: The addressshow result.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      description: Addressshow parameters
      content:
        application/json:
          schema:
            properties:
              processTimeout:
                type: integer
                description: The number of seconds to run/wait before timing out.
                default: 5
appliances-traceroute-command:
  post:
    summary: Runs traceroute command on an Appliance.
    description: >-
      Run traceroute command on an Appliance.
      This API call must be made with **Accept** header of **application/vnd.appgate.com.peer-v20+text** as it returns plain text instead of JSON.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Command ran successfully.
        content:
          text/plain:
            schema:
              type: string
              description: The traceroute result.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      description: Traceroute parameters
      content:
        application/json:
          schema:
            required:
              - destination
            properties:
              destination:
                type: string
                description: The destination to trace.
                example: appgate.com
              processTimeout:
                type: integer
                description: The number of seconds to run/wait before timing out.
                default: 30
appliances-ntpq-command:
  post:
    summary: Runs ntpq command on an Appliance.
    description: >-
      Run ntpq command on an Appliance.
      This API call must be made with **Accept** header of **application/vnd.appgate.com.peer-v20+text** as it returns plain text instead of JSON.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Command ran successfully.
        content:
          text/plain:
            schema:
              type: string
              description: The ntpq result.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      description: Ntpq parameters
      content:
        application/json:
          schema:
            properties:
              processTimeout:
                type: integer
                description: The number of seconds to run/wait before timing out.
                default: 5
appliances-switch-partition:
  post:
    summary: Switch partition on the Appliance, regardless of the upgrade status.
    description: Reboot and switch partition on the Appliance.
    tags:
      - Appliance
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '202':
        $ref: './common.yml#/responses/ChangeId'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
appliances-name-resolution-status:
  get:
    summary: Get the status of name resolution on a Gateway.
    description: >-
      Get the status of name resolution on a Gateway.
      It lists all the subscribed resource names from all the connected Clients and shows the resolution results.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Gateway returned the status successfully.
        content:
          application/json:
            schema:
              type: object
              description: The name resolution status.
              properties:
                resolutions:
                  type: object
                  description: Dictionary of resource name and respective results.
                  example:
                    aws://lb-tag:kubernetes.io/service-name=opsnonprod/erp-dev:
                      partial: false
                      finals:
                        - 3.120.51.78
                        - 35.156.237.184
                      partials:
                        - dns://all.GW-ELB-2001535196.eu-central-1.elb.amazonaws.com
                        - dns://all.purple-lb-1785267452.eu-central-1.elb.amazonaws.com
                      errors: [ ]
                  additionalProperties:
                    type: object
                    description: Resolution result.
                    properties:
                      partial:
                        type: boolean
                        description: Whether the resolution is for the resource is complete or partial.
                      finals:
                        type: array
                        description: Completely resolved IPs.
                        items:
                          type: string
                        example:
                          - 3.120.51.78
                          - 35.156.237.184
                      partials:
                        type: array
                        description: Partially resolved names.
                        items:
                          type: string
                        example:
                          - dns://all.GW-ELB-2001535196.eu-central-1.elb.amazonaws.com
                          - dns://all.purple-lb-1785267452.eu-central-1.elb.amazonaws.com
                      errors:
                        type: array
                        description: Errors occurred during resolution.
                        items:
                          type: string
                          example: Invalid hostname
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
appliances-force-disable-controllers:
  post:
    summary: Forcefully disables one or more Controller functions.
    description: >-
      This API is supposed to be used when one or more Controller functions cannot be removed either because the Appliances are unresponsive or database status is not fixable.
      Use of the API by itself is not recommended. Use sdpctl instead.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
    responses:
      '200':
        description: Controller functions were disabled for the given Appliance list successfully.
        content:
          application/json:
            schema:
              type: object
              description: The result of the disabling action.
              properties:
                offlineControllers:
                  type: array
                  description: IDs of the Controllers that were offline during the process and as a result, did not receive the update.
                  items:
                    type: string
                    format: uuid
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      description: Active Appliances to disable the Controller function for.
      content:
        application/json:
          schema:
            required:
              - applianceIds
            properties:
              applianceIds:
                type: array
                description: IDs of the Controller Appliance's to disable the function for.
                items:
                  type: string
                  format: uuid
appliances-repartition-ip-allocations:
  post:
    summary: Repartition IP allocations on newly modified Controller list.
    description: >-
      Typically used after force-disable-controller API calls to fix the IP allocation strategy on the Controllers left.
      Use of the API by itself is not recommended. Use sdpctl instead.
    tags:
      - Appliances
    parameters:
      - $ref: './common.yml#/parameters/authorization'
    responses:
      '202':
        $ref: './common.yml#/responses/ChangeId'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
change:
  get:
    summary: Get all change information from an Appliance.
    description: >-
      When a change is requested on an appliance it returns a change id.
      We can use that change id to get information about that change.
    tags:
      - Appliance Change
    parameters:
      - in: path
        name: changeId
        description: Change id
        schema:
          type: string
        required: true
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        $ref: './common.yml#/responses/ChangeData'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '412':
        $ref: './common.yml#/responses/ApplianceStateError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'

requestBodies:
  Appliance:
    content:
      application/json:
        schema:
          $ref: '#/definitions/Appliance'
    description: Appliance object.
    required: true
  ExportSeedConfig:
    content:
      application/json:
        schema:
          $ref: '#/definitions/SSHConfig'
    description: Export seed config object.
    required: true

definitions:
  ApplianceWithStatusList:
    description: List of appliances with status.
    allOf:
      - $ref: './common.yml#/definitions/ResultList'
    properties:
      data:
        type: object
        description: List of appliances with status.
        properties:
          items:
            $ref: '#/definitions/ApplianceWithStatus'
  ApplianceWithStatus:
    allOf:
      - $ref: '#/definitions/Appliance'
    properties:
      state:
        type: string
        description: State of the Appliance. For internal use.
      functions:
        type: array
        description: Functions of the Appliance.
        items:
          $ref: './common.yml#/definitions/ApplianceFunction'
      status:
        type: string
        description: Appliance Status.
        enum:
          - error
          - warning
          - busy
          - offline
          - n/a
          - healthy
      customizationName:
        type: string
        description: The name of the customization applied to the Appliance.
      cpu:
        type: number
        description: CPU utilization in percentage.
      memory:
        type: number
        description: Memory utilization in percentage.
      disk:
        type: number
        description: Disk utilization in percentage.
      numberOfSessions:
        type: integer
        description: Number of sessions.
      applianceVersion:
        type: string
        description: The Appliance build version.
        example: 6.3.0
      details:
        type: object
        description: Appliance status details.
        properties:
          version:
            type: string
            description: The Appliance build version.
            example: 6.3.0
          cpu:
            $ref: '#/definitions/SystemInfo'
          memory:
            $ref: '#/definitions/SystemInfo'
          disk:
            $ref: '#/definitions/SystemInfo'
          network:
            $ref: '#/definitions/NetworkInfo'
          status:
            type: string
            description: Appliance Status.
            enum:
              - error
              - warning
              - busy
              - offline
              - n/a
              - healthy
          roles:
            $ref: '#/definitions/Roles'
          state:
            type: string
            description: State of the Appliance. For internal use.
          volumeNumber:
            type: integer
            description: The volume number in use.
          upgrade:
            type: object
            description: Appliance Upgrade.
            properties:
              status:
                type: string
                description: Appliance Upgrade Status.
                enum:
                  - idle
                  - upgrading
              details:
                type: string
                description: Appliance Upgrade Details.
  SystemInfo:
    type: object
    description: System resource information.
    properties:
      total:
        type: integer
        description: Total.
      used:
        type: integer
        description: Used.
      free:
        type: integer
        description: Free.
      percent:
        type: number
        description: Percent.
      details:
        type: string
        description: System information details.
      available:
        type: number
        description: Available.
  NetworkInfo:
    type: object
    description: Network information.
    properties:
      busiestNic:
        type: string
        description: Busiest NIC.
      details:
        type: object
        description: Network information details.
        additionalProperties:
          type: object
          description: Network information details.
          properties:
            dropin:
              type: integer
              description: Dropin.
            dropout:
              type: integer
              description: Dropout.
            rxSpeed:
              type: string
              description: RxSpeed.
            txSpeed:
              type: string
              description: TxSpeed.
            ips:
              type: array
              description: Ips.
              items:
                type: string
                description: Ip.
  Roles:
    type: object
    description: Appliance roles.
    properties:
      controller:
        $ref: 'common.yml#/definitions/ControllerRole'
      logServer:
        $ref: 'common.yml#/definitions/ApplianceRole'
      logForwarder:
        $ref: 'common.yml#/definitions/ApplianceRole'
      metricsAggregator:
        $ref: 'common.yml#/definitions/ApplianceRole'
      gateway:
        $ref: 'common.yml#/definitions/ApplianceWithSessionsRole'
      connector:
        $ref: 'common.yml#/definitions/ApplianceWithSessionsRole'
      portal:
        $ref: 'common.yml#/definitions/ApplianceWithSessionsRole'
      appliance:
        $ref: 'common.yml#/definitions/ApplianceRole'
  portal12:
    allOf:
      - $ref: '#/definitions/P12'
      - type: object
        properties:
          verifyUpstream:
            type: boolean
            description: Portal will verify upstream certificate of the endpoints.
            default: true
  Elasticsearch:
    allOf:
      - $ref: '#/definitions/AwsBase'
      - type: object
        description: Elasticsearch endpoint configuration on AWS.
        required:
          - url
        properties:
          url:
            type: string
            description: The URL of the elasticsearch server.
            example: 'https://aws.com/elasticsearch/instance/asdaxllkmda64'
          retentionDays:
            type: integer
            description: Optional field to enable log retention on the configured AWS elasticsearch. Defines how many days the audit logs will be kept.
            example: 30
          compatibilityMode:
            type: integer
            description: Which version of Elasticsearch that logs are forwarded to.
            default: 6
          authentication:
            type: object
            description: Optional authentication settings used when sending logs to an elasticsearch instance.
            required:
              - type
              - token
            properties:
              type:
                type: string
                description: The type of authentication to use.
                enum:
                  - Basic
                  - ServiceAccounts
                  - TokenService
                  - ApiKeyService
              token:
                type: string
                description: The token to be used for authentication.
                writeOnly: true
                example: 'user:password'
  SSHConfig:
    type: object
    description: SSH configuration during seeding.
    properties:
      provideCloudSSHKey:
        type: boolean
        description: Tells appliance to use the key generated by AWS or Azure.
      sshKey:
        type: string
        description: SSH public key to allow.
        example: 'ssh-rsa ....'
      password:
        type: string
        description: Appliance's CZ user password.
        example: 'tSW3!QBv(rj{UuLY'
      allowCustomization:
        type: boolean
        description: Whether the Appliance should allow customizations or not.
        default: true
      validityDays:
        type: number
        description: How many days the seed should be valid for.
        default: 1
  Portal:
    type: object
    description: Portal settings.
    properties:
      enabled:
        type: boolean
        description: Whether the Portal is enabled on this appliance or not.
        default: false
      httpsP12:
        $ref: '#/definitions/P12'
      httpRedirect:
        type: boolean
        description: "Automatic 80->443 redirection for Portal."
        default: true
      proxyPorts:
        type: array
        description: Ports that can be proxied via Portal.
        items:
          type: integer
        default:
          - 443
      proxyP12s:
        type: array
        description: P12 files for proxying traffic to HTTPS endpoints.
        items:
          $ref: '#/definitions/portal12'
      profiles:
        type: array
        description: Names of the profiles in this Collective to use in the Portal.
        items:
          type: string
          example: Portal Users
      externalProfiles:
        type: array
        description: Profiles from other Collectives to use in the Portal.
        items:
          $ref: './client_profile.yml#/definitions/ExternalProfile'
      signInCustomization:
        type: object
        description: Visual customizations to make on the Portal sign-in page.
        properties:
          backgroundColor:
            type: string
            description: Changes the background color on the sign-in page. In hexadecimal format.
            example: "#123456"
          backgroundImage:
            type: string
            format: byte
            description: Changes the background image on the sign-in page. Must be in PNG, JPEG or GIF format.
          logo:
            type: string
            format: byte
            description: Changes the logo on the sign-in page. Must be in PNG, JPEG or GIF format.
          text:
            type: string
            description: Adds a text to the sign-in page.
          textColor:
            type: string
            description: Changes the text color on the sign-in page. In hexadecimal format.
            example: "#123456"
          autoRedirect:
            type: boolean
            description: >-
              If enabled and the user lands on the Portal sign-in page by entering an endpoint URL on the browser,
              it will be redirected to the endpoint automatically after successfully signing in instead of the Portal Client overview page.
  ApplianceList:
    allOf:
      - $ref: './common.yml#/definitions/ResultList'
      - type: object
        description: Represents a list of Appliances.
        properties:
          data:
            type: array
            description: List of Appliances.
            items:
              $ref: '#/definitions/Appliance'
  Appliance:
    allOf:
      - $ref: './common.yml#/definitions/BaseEntity'
      - type: object
        description: Represents an Appliance.
        required:
          - hostname
          - clientInterface
          - networking
        properties:
          activated:
            type: boolean
            readOnly: true
            description: >-
              Whether the Appliance is activated or not.
              If it is not activated, it won't be accessible by the Clients.
          pendingCertificateRenewal:
            type: boolean
            readOnly: true
            description: >-
              Whether the Appliance is pending certificate renewal or not. Should be true for a very short period on certificate renewal.
            example: false
          version:
            type: integer
            readOnly: true
            description: Peer version of the Appliance.
            example: 9
          hostname:
            type: string
            description: >-
              Hostname of the Appliance.
              It's used by other Appliances to communicate with and identify this Appliances.
              Set it to "automatic.hostname.assignment" for cloud appliances in order for it to automatically configure the hostname on activation.
            example: 'appgate.company.com'
          site:
            type: string
            format: uuid
            x-uuid-ref: Site
            description: >-
              Site served by the Appliance.
              Entitlements on this Site will be included in the Entitlement Token for this Appliance.
              Not useful if Gateway role is not enabled.
            example: 4c07bc67-57ea-42dd-b702-c2d6c45419fc
          siteName:
            type: string
            readOnly: true
            description: Name of the Site for this Appliance. For convenience only.
            example: Default Site
          customization:
            type: string
            x-uuid-ref: ApplianceCustomization
            format: uuid
            description: Customization assigned to this Appliance.
            example: 4c07bc67-57ea-42dd-b702-c2d6c45419fc
          clientInterface:
            type: object
            description: The details of the Client connection interface.
            required:
              - hostname
            properties:
              proxyProtocol:
                description: To enable/disable Proxy protocol on this Appliance.
                type: boolean
                default: false
              hostname:
                type: string
                description: >- 
                  Hostname to connect by the Clients. 
                  It will be used to validate the Appliance Certificate.
                  Set it to "automatic.hostname.assignment" for cloud appliances in order for it to automatically configure the hostname on activation.
                example: 'appgate.company.com'
              localHostname:
                type: string
                description: Load hostname that would take effect with Local Site Detection feature.
              httpsPort:
                type: integer
                description: Port to connect for the Client specific services.
                default: 443
              dtlsPort:
                type: integer
                description: Port to connect for the Clients that connects to vpnd on DTLS if enabled.
                default: 443
              allowSources:
                $ref: '#/definitions/AllowSources'
              overrideSpaMode:
                type: string
                description: Override SPA mode for this appliance.
                enum:
                  - TCP
                  - 'UDP-TCP'
          adminInterface:
            type: object
            description: >-
              The details of the admin connection interface. Required on Controllers and LogServers.
            required:
              - hostname
              - httpsCiphers
            properties:
              hostname:
                type: string
                description: >-
                  Hostname to connect to the admin interface. 
                  This hostname will be used to validate the appliance certificate.
                  Set it to "automatic.hostname.assignment" for cloud appliances in order for it to automatically configure the hostname on activation.
                example: "appgate.company.com"
              httpsPort:
                type: integer
                description: Port to connect for admin services.
                default: 8443
              httpsCiphers:
                type: array
                description: 'The type of TLS ciphers to allow. See: https://www.openssl.org/docs/man1.0.2/apps/ciphers.html for all supported ciphers.'
                items:
                  type: string
                default:
                  - "TLS13-AES256-GCM-SHA384"
                  - "ECDHE-RSA-AES256-GCM-SHA384"
                  - "ECDHE-RSA-AES128-GCM-SHA256"
              allowSources:
                $ref: '#/definitions/AllowSources'
              httpsP12:
                $ref: '#/definitions/P12'
          networking:
            type: object
            description: Networking configuration of the system.
            properties:
              hosts:
                type: array
                description: '/etc/hosts configuration'
                items:
                  type: object
                  required:
                    - hostname
                    - address
                  properties:
                    hostname:
                      type: string
                      description: Hostname to map IP to.
                      example: 'internal.service.company.com'
                    address:
                      type: string
                      description: IP for the given hostname for appliance to resolve.
                      example: '10.10.10.10'
              nics:
                type: array
                description: System NIC configuration
                items:
                  type: object
                  required:
                    - name
                  properties:
                    enabled:
                      type: boolean
                      description: Whether the NIC is active or not.
                      example: true
                    name:
                      type: string
                      description: NIC name
                      example: 'eth0'
                    ipv4:
                      type: object
                      description: IPv4 settings for this NIC.
                      properties:
                        dhcp:
                          type: object
                          description: IPv4 DHCP configuration for the NIC.
                          properties:
                            enabled:
                              type: boolean
                              description: Whether DHCP for IPv4 is enabled.
                            dns:
                              type: boolean
                              description: Whether to use DHCP for setting IPv4 DNS settings on the appliance.
                            routers:
                              type: boolean
                              description: Whether to use DHCP for setting IPv4 default gateway on the appliance.
                            ntp:
                              type: boolean
                              description: Whether to use DHCP for setting NTP on the appliance.
                            mtu:
                              type: boolean
                              description: Whether to use DHCP for setting MTU on the appliance.
                        static:
                          type: array
                          description: IPv4 static NIC configuration for the NIC.
                          required:
                            - address
                            - netmask
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                                description: IPv4 Address of the network interface.
                                example: '10.10.10.1'
                              netmask:
                                type: integer
                                description: Netmask of the network interface.
                                example: 24
                              snat:
                                type: boolean
                                description: Enable SNAT on this IP.
                        virtualIp:
                          type: string
                          description: Virtual IP to use for IPv4.
                          example: '10.10.10.24'
                    ipv6:
                      type: object
                      description: IPv6 settings for this NIC.
                      properties:
                        dhcp:
                          type: object
                          description: IPv6 DHCP configuration for the NIC.
                          properties:
                            enabled:
                              type: boolean
                              description: Whether DHCP for IPv6 is enabled.
                            dns:
                              type: boolean
                              description: Whether to use DHCP for setting IPv6 DNS settings on the Appliance.
                            ntp:
                              type: boolean
                              description: Whether to use DHCP for setting NTP on the appliance.
                            mtu:
                              type: boolean
                              description: Whether to use DHCP for setting MTU on the appliance.
                        static:
                          type: array
                          description: IPv6 static NIC configuration for the NIC.
                          items:
                            type: object
                            required:
                              - address
                              - netmask
                            properties:
                              address:
                                type: string
                                description: IPv6 Address of the network interface.
                                example: '2001:db8:0:0:0:ff00:42:8329'
                              netmask:
                                type: integer
                                description: Netmask of the network interface.
                                example: 24
                              snat:
                                type: boolean
                                description: Enable SNAT on this IP.
                        virtualIp:
                          type: string
                          description: Virtual IP to use for IPv6.
                          example: '2001:db8:0:0:0:ff00:42:8400'
                    mtu:
                      type: integer
                      description: MTU setting for the NIC. If left empty, appliance default will be used.
                      example: 1500
              dnsServers:
                type: array
                description: DNS Server addresses.
                items:
                  type: string
                example:
                  - '172.17.18.19'
                  - '192.100.111.31'
              dnsDomains:
                type: array
                deprecated: true
                description: DNS Search domains. Deprecated as of 6.2.
                items:
                  type: string
                example:
                  - 'internal.company.com'
              routes:
                type: array
                description: System route settings.
                items:
                  type: object
                  required:
                    - address
                    - netmask
                  properties:
                    address:
                      type: string
                      description: Address to route.
                      example: '10.0.0.0'
                    netmask:
                      type: integer
                      description: Netmask for the subnet to route.
                      example: 24
                    gateway:
                      type: string
                      description: Gateway to use for routing.
                      example: '10.0.0.254'
                    nic:
                      type: string
                      description: NIC name to use for routing.
                      example: 'eth0'
          ntp:
            type: object
            description: NTP configuration.
            properties:
              servers:
                type: array
                items:
                  type: object
                  description: NTP server.
                  required:
                    - hostname
                  properties:
                    hostname:
                      type: string
                      description: Hostname or IP of the NTP server.
                      example: '0.ubuntu.pool.ntp.org'
                    keyType:
                      type: string
                      description: Type of key to use for secure NTP communication.
                      enum:
                        - MD5
                        - SHA
                        - SHA1
                        - SHA256
                        - SHA512
                        - RMD160
                    keyNo:
                      type: integer
                      description: Identifier number for the key.
                    key:
                      format: password
                      type: string
                      description: Key to use for secure NTP communication.
                      writeOnly: true
          sshServer:
            type: object
            description: SSH server configuration.
            properties:
              enabled:
                type: boolean
                description: Whether the SSH Server is enabled on this appliance or not.
                default: false
              port:
                type: integer
                description: SSH port.
                default: 22
              allowSources:
                $ref: '#/definitions/AllowSources'
              passwordAuthentication:
                type: boolean
                description: Whether SSH allows password authentication or not.
                default: true
          snmpServer:
            type: object
            description: SNMP Server configuration.
            properties:
              enabled:
                type: boolean
                description: Whether the SNMP Server os enabled on this appliance or not.
                default: false
              tcpPort:
                type: integer
                description: TCP port for SNMP Server.
                example: 161
              udpPort:
                type: integer
                description: UDP port for SNMP Server.
                example: 161
              snmpd.conf:
                description: Raw SNMP configuration.
                type: string
              allowSources:
                $ref: '#/definitions/AllowSources'
          healthcheckServer:
            type: object
            description: Healthcheck Server configuration.
            properties:
              enabled:
                type: boolean
                description: Whether the Healthcheck Server is enabled on this appliance or not.
                default: false
              port:
                type: integer
                description: Port to connect for Healthcheck Server.
                default: 5555
              allowSources:
                $ref: '#/definitions/AllowSources'
          prometheusExporter:
            $ref: '#/definitions/PrometheusExporter'
          ping:
            type: object
            description: Rules for allowing ping.
            properties:
              allowSources:
                $ref: '#/definitions/AllowSources'
          logServer:
            type: object
            description: Log Server settings. Log Server collects audit logs from all the appliances and stores them.
            properties:
              enabled:
                type: boolean
                description: Whether the Log Server is enabled on this appliance or not.
                default: false
              retentionDays:
                type: integer
                description: How many days of audit logs will be kept.
                default: 30
          controller:
            type: object
            description: Controller settings.
            properties:
              enabled:
                type: boolean
                description: Whether the Controller is enabled on this appliance or not. Cannot be enabled on an inactive Appliance since some checks need to be done first.
                default: false
          gateway:
            type: object
            description: Gateway settings.
            properties:
              enabled:
                type: boolean
                description: Whether the Gateway is enabled on this appliance or not.
                default: false
              suspended:
                type: boolean
                description: Whether the Gateway is in suspended mode or not. Suspended state will keep the existing Client connections but will reject new ones.
                default: false
              vpn:
                type: object
                description: VPN configuration.
                properties:
                  weight:
                    type: integer
                    description: Load balancing weight.
                    default: 100
                  localWeight:
                    type: integer
                    description: Load balancing weight that would take effect with Local Site Detection feature.
                  allowDestinations:
                    type: array
                    description: Destinations to allow tunnels to.
                    items:
                      type: object
                      required:
                        - nic
                      properties:
                        address:
                          type: string
                          description: IP address to allow connection.
                          example: '192.168.111.0'
                        netmask:
                          type: integer
                          description: Netmask to use with address for allowing connections.
                          example: 24
                        nic:
                          type: string
                          description: NIC name to accept connections on.
                          example: 'eth1'
          logForwarder:
            type: object
            description: LogForwarder settings. LogForwarder collects audit logs from the appliances in the given sites and sends them to the given endpoints.
            properties:
              enabled:
                type: boolean
                description: Whether the LogForwarder is enabled on this appliance or not.
                default: false
              elasticsearch:
                allOf:
                  - $ref: '#/definitions/Elasticsearch'
              tcpClients:
                type: array
                description: TCP endpoints to connect and send the audit logs with the given format.
                items:
                  $ref: '#/definitions/TcpClient'
              awsKineses:
                type: array
                description: AWS Kinesis endpoints to connect and send the audit logs with the given format.
                items:
                  $ref: '#/definitions/AwsKinesis'
              sumoLogicClients:
                type: array
                description: SumoLogic endpoints to connect and send the audit logs to.
                items:
                  $ref: '#/definitions/SumoLogic'
              splunkClients:
                type: array
                description: Splunk endpoints to connect and send the audit logs to.
                items:
                  $ref: '#/definitions/Splunk'
              azureMonitors:
                type: array
                description: Azure Monitor endpoints to connect and send the audit logs to.
                items:
                  $ref: '#/definitions/AzureMonitor'
              falconLogScales:
                type: array
                description: Falcon LogScale endpoints to connect and send the audit logs to.
                items:
                  $ref: '#/definitions/FalconLogScale'
              datadogs:
                type: array
                description: Datadog endpoints to connect and send the audit logs to.
                items:
                  $ref: '#/definitions/Datadog'
              coralogixs:
                type: array
                description: Coralogix endpoints to connect and send the audit logs to.
                items:
                  $ref: '#/definitions/Coralogix'
              sites:
                type: array
                description: The sites to collect logs from and forward.
                items:
                  type: string
                  format: uuid
                  x-uuid-ref: Site
                  description: >
                    UUID of a site.
                    Use '6f6fa9d9-17b2-4157-9f68-e97662acccdf' to collect logs from all the appliances.
                    Use '6263435b-c9f6-4b7f-99f8-37e2e6b006a9' to collect logs from appliances without a site.
          metricsAggregator:
            type: object
            description: Metrics Aggregator settings. It collects metrics from the appliances in the given sites and provides Prometheus APIs for consumption.
            properties:
              enabled:
                type: boolean
                description: Whether the Metrics Aggregator is enabled on this appliance or not.
                default: false
              prometheusExporter:
                $ref: '#/definitions/PrometheusExporter'
              sites:
                type: array
                description: The sites to collect metrics from.
                items:
                  type: string
                  format: uuid
                  x-uuid-ref: Site
                  description: >
                    UUID of a site.
                    Use '6f6fa9d9-17b2-4157-9f68-e97662acccdf' to collect logs from all the appliances.
                    Use '6263435b-c9f6-4b7f-99f8-37e2e6b006a9' to collect logs from appliances without a site.
          connector:
            type: object
            description: Connector settings.
            properties:
              enabled:
                type: boolean
                description: Whether the Connector is enabled on this appliance or not.
                default: false
              expressClients:
                type: array
                description: >-
                  A list of Clients to run on the appliance with the given configuration.
                  The Clients will get the necessary tokens automatically according to the Site assigned to this Appliance.
                  Currently only one allowed.
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: Name for the Client. It will be mapped to the user claim 'clientName'.
                      example: Printers
                    deviceId:
                      type: string
                      format: uuid
                      description: The device ID to assign to this Client. It will be used to generate device distinguished name.
                      example: 12699e27-b584-464a-81ee-5b4784b6d425
                    allowResources:
                      $ref: '#/definitions/AllowResources'
                    snatToResources:
                      type: boolean
                      description: Use Source NAT for the resources.
                      default: true
                    dnatToResource:
                      type: boolean
                      description: Apply destination NAT to traffic from tunnel into a resource
                      default: false
              advancedClients:
                type: array
                description: A list of Clients to run on the appliance with the given configuration. Requires manual Policy configuration.
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: Name for the Client. It will be mapped to the user claim 'clientName'.
                      example: Printers
                    deviceId:
                      type: string
                      format: uuid
                      description: The device ID to assign to this Client. It will be used to generate device distinguished name.
                      example: 12699e27-b584-464a-81ee-5b4784b6d425
                    allowResources:
                      $ref: '#/definitions/AllowSources'
                    snatToTunnel:
                      type: boolean
                      description: Use Source NAT for the Client tunnel.
                      default: true
                    snatToResources:
                      type: boolean
                      description: >-
                        Use SNAT for outgoing traffic from the Express Connector,
                        endpoints will see traffic as coming from the Connector itself
                      default: true
                    dnatToResource:
                      type: boolean
                      description: Apply destination NAT to traffic from tunnel into a resource
                      default: false
                    defaultGateway:
                      type: boolean
                      description: Use this connector client as a default gw for local resources
                      default: false
          portal:
            $ref: '#/definitions/Portal'
          rsyslogDestinations:
            type: array
            description: Rsyslog destination settings to forward appliance logs.
            items:
              type: object
              required:
                - destination
              properties:
                selector:
                  type: string
                  description: Rsyslog selector.
                  example: ':msg, contains, "[AUDIT]"'
                  default: '*.*'
                template:
                  type: string
                  description: Rsyslog template to forward logs with.
                  example: "%msg:9:$%\n"
                  default: '%HOSTNAME% %msg%'
                destination:
                  type: string
                  description: Rsyslog server destination.
                  example: '@@10.10.10.2'
          hostnameAliases:
            type: array
            description: >-
              Hostname aliases. They are added to the Appliance certificate as Subject Alternative Names so it is
              trusted using different IPs or hostnames.
              Requires manual certificate renewal to apply changes to the certificate.
            items:
              type: string
            example:
              - 'appgatealias.company.com'
              - 'alias2.appgate.company.com'
  PrometheusExporter:
    type: object
    description: Prometheus Exporter configuration.
    properties:
      enabled:
        type: boolean
        description: Whether the Prometheus Exporter is enabled on this appliance or not.
        default: false
      port:
        type: integer
        description: Port to connect for Prometheus Exporter.
        default: 5556
      allowSources:
        $ref: '#/definitions/AllowSources'
      useHTTPS:
        type: boolean
        description: Whether to use HTTP or HTTPS for the exporter.
        default: false
      httpsP12:
        $ref: '#/definitions/P12'
      basicAuth:
        type: boolean
        description: Enable basic auth for Prometheus Exporter.
        default: false
      allowedUsers:
        type: array
        description: Basic auth users.
        required:
          - username
        items:
          type: object
          properties:
            username:
              type: string
              example: prometheus
            password:
              type: string
              writeOnly: true
      labelsDisabled:
        type: array
        description: List of labels to filter out.
        items:
          type: string
          enum:
            - 'collective_id'
            - 'collective_name'
            - 'appliance_id'
            - 'appliance_name'
            - 'appliance_version'
            - 'site_id'
            - 'site_name'
  AllowSources:
    type: array
    description: Source configuration to allow via iptables.
    items:
      type: object
      properties:
        address:
          type: string
          description: IP address to allow connection.
          example:
            - '0.0.0.0'
            - '::'
        netmask:
          type: integer
          description: Netmask to use with address for allowing connections.
          example: 0
        nic:
          type: string
          description: NIC name to accept connections on.
          example: 'eth0'
  AllowResources:
    type: array
    description: A list of subnets to allow access.
    items:
      type: object
      required:
        - address
        - netmask
      properties:
        address:
          type: string
          description: IP address
          example: '0.0.0.0'
        netmask:
          type: integer
          description: netmask
          example: 32
  AwsBase:
    type: object
    properties:
      awsId:
        type: string
        description: AWS ID to login. Only required if AWS Access Keys are being used to authenticate.
      awsSecret:
        format: password
        type: string
        description: AWS secret to login. Only required if AWS Access Keys are being used to authenticate.
        writeOnly: true
      awsRegion:
        type: string
        description: AWS region. Only required if AWS Access Keys are being used to authenticate.
        example: eu-west-2
      useInstanceCredentials:
        type: boolean
        description: Whether to use the credentials from the AWS instance or not.
  AwsKinesis:
    allOf:
      - $ref: '#/definitions/AwsBase'
      - type: object
        required:
          - type
          - streamName
        properties:
          type:
            type: string
            description: AWS Kinesis type
            enum:
              - Stream
              - Firehose
          streamName:
            type: string
            description: Name of the stream.
            example: Appgate_SDP_audit
          batchSize:
            type: integer
            description: Batch size for the stream. Used only for "Stream" type.
            default: 400
          numberOfPartitionKeys:
            type: integer
            description: Number of partition keys to use for the stream. Used only for "Stream" type.
            default: 10
          filter:
            type: string
            description: JMESPath expression to filter audit logs to forward.
            example: "event_type=='authentication_succeeded'"
  TcpClient:
    type: object
    required:
      - name
      - host
      - port
      - format
    properties:
      name:
        type: string
        description: Name of the endpoint.
        example: Company SIEM
      host:
        type: string
        description: Hostname or the IP address of the endpoint.
        example: siem.company.com
      port:
        type: integer
        description: Port of the endpoint.
        example: 8888
      format:
        type: string
        description: The format to send the audit logs.
        enum:
          - json
          - syslog
      useTLS:
        type: boolean
        description: Whether to use TLS to connect to endpoint or not. If enabled, make sure the LogForwarder appliance trusts the certificate of the endpoint.
      filter:
        type: string
        description: JMESPath expression to filter audit logs to forward.
        example: "event_type=='authentication_succeeded'"
  Splunk:
    type: object
    required:
      - url
    properties:
      url:
        type: string
        description: URL of the Splunk collector to connect to.
        example: https://hec.hostname.com:443/services/collector/event
      token:
        format: secret
        type: string
        description: Token to use for authentication.
        writeOnly: true
        example: B5A79AAD-D822-46CC-80D1-819F80D7BFB
  SumoLogic:
    type: object
    required:
      - url
    properties:
      url:
        type: string
        description: URL of the Sumo Logic collector to connect to.
        example: https://hostname.com/collector/677a49eb-da20-4143-ab61-cfd8aec64647
  AzureMonitor:
    type: object
    required:
      - appId
      - tokenRequestUrl
      - logDestinationUrl
      - scope
    properties:
      appId:
        type: string
        description: App ID to use for authentication.
      appSecret:
        format: password
        type: string
        description: App secret to use for authentication.
        writeOnly: true
      tokenRequestUrl:
        type: string
        description: URL for Azure Monitor to request token from.
        example: https://hostname.com/token
      logDestinationUrl:
        type: string
        description: URL of Azure Monitor to forward logs to.
        example: https://hostname.com/logs
      scope:
        type: string
        description: Scope that the log forwarder will use in its tokens requests.
        default: https://monitor.azure.com/.default
  FalconLogScale:
    type: object
    required:
      - collectorUrl
    properties:
      collectorUrl:
        type: string
        description: URL of the Falcon LogScale collector.
        example: https://api.humio.com
      token:
        format: password
        type: string
        description: Ingest token.
        writeOnly: true
      index:
        type: string
        description: Optional name of the repository to ingest into.
      sourceType:
        type: string
        description: Translated to \#type inside Humio. If set, this is used to choose which Humio parser to
          use for extracting fields.
      source:
        type: string
        description: Translated to the @source field in Humio.
  Datadog:
    type: object
    required:
      - site
      - apiKey
      - source
    properties:
      site:
        type: string
        description: Datadog site to send logs to.
        example: https://http-intake.logs.datadoghq.com
      apiKey:
        format: password
        type: string
        description: API key to use for authentication.
        writeOnly: true
      source:
        type: string
        description: Source to use for the logs.
        example: appgate
      tags:
        type: array
        description: Tags to add to the logs.
        items:
          type: string
        example:
          - appgate
          - appgate-sdp
  Coralogix:
    type: object
    required:
      - url
      - privateKey
      - uuid
      - applicationName
      - subsystemName
    properties:
      url:
        type: string
        description: URL of the Coralogix collector to connect to.
        example: https://api.coralogix.com/api/v1/logs
      privateKey:
        format: password
        type: string
        description: Private key to use for authentication.
        writeOnly: true
      uuid:
        type: string
        description: UUID of the Coralogix collector to connect to.
        example: 12345678-1234-1234-1234-123456789012
      applicationName:
        type: string
        description: Application name to use for the logs.
        example: appgate
      subsystemName:
        type: string
        description: Subsystem name to use for the logs.
        example: appgate-sdp
  ApplianceSeedISO:
    type: object
    description: The ISO file blob in JSON.
    properties:
      iso:
        type: string
        format: byte
        description: The ISO file in base64 format. Response must be Base64 decoded and saved as an ISO file.
  P12:
    type: object
    description: PKCS12 object with X.509 certificate and private key.
    properties:
      id:
        type: string
        format: uuid
        description: Identifier to track the object on update since all the other fields are write-only. A random one will be assigned if left empty.
      content:
        type: string
        format: byte
        writeOnly: true
        description: Contents of the P12 file in Base64 format.
      password:
        type: string
        writeOnly: true
        description: Password for the P12 file.
      subjectName:
        type: string
        readOnly: true
        description: Subject name of the certificate in the file.
