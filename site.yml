#file: noinspection YAMLSchemaValidation
sites:
  get:
    summary: List all Sites.
    description: List all Sites visible to current user.
    tags:
      - Sites
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/query'
      - $ref: './common.yml#/parameters/range'
      - $ref: './common.yml#/parameters/orderBy'
      - $ref: './common.yml#/parameters/descending'
      - $ref: './common.yml#/parameters/filterBy'
    responses:
      '200':
        description: List of Sites.
        content:
          application/json:
            schema:
              $ref: '#/definitions/SiteList'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
  post:
    summary: Create a new Site.
    description: Create a new Site.
    tags:
      - Sites
    parameters:
      - $ref: './common.yml#/parameters/authorization'
    responses:
      '200':
        description: Created Site.
        content:
          application/json:
            schema:
              $ref: '#/definitions/Site'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '402':
        $ref: './common.yml#/responses/PaymentError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '409':
        $ref: './common.yml#/responses/ConflictError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/Site'
sites-id:
  get:
    summary: Get a specific Site.
    description: Get a specific Site.
    tags:
      - Sites
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Single Site.
        content:
          application/json:
            schema:
              $ref: '#/definitions/Site'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
  put:
    summary: Update an existing Site.
    description: Update an existing Site.
    tags:
      - Sites
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Updated Site.
        content:
          application/json:
            schema:
              $ref: '#/definitions/Site'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/Site'
  delete:
    summary: Delete a specific Site.
    description: Delete a specific Site.
    tags:
      - Sites
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '204':
        description: Site was deleted successfully.
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
sites-status:
  get:
    summary: List all Sites with their health status.
    description: List all Sites with their health status visible to current user. This API is significantly slower than the regular sites API.
    tags:
      - Sites
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/query'
      - $ref: './common.yml#/parameters/range'
      - $ref: './common.yml#/parameters/orderBy'
      - $ref: './common.yml#/parameters/descending'
      - $ref: './common.yml#/parameters/filterBy'
    responses:
      '200':
        description: List of Sites with their health status.
        content:
          application/json:
            schema:
              $ref: '#/definitions/SiteWithStatusList'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
sites-resources:
  get:
    summary: Query the resolvers on this Site for available resources.
    description: >-
      Query the resolvers on this Site for available resources. 
      Controller will make a query to a random Gateway which will query the resolver providers in turn for the given parameters.
    tags:
      - Sites
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
      - $ref: './common.yml#/parameters/query'
      - $ref: './common.yml#/parameters/range'
      - name: resolver
        in: query
        description: Resolver type to query.
        required: true
        schema:
          $ref: '#/definitions/ResolverType'
      - name: type
        in: query
        description: Resource type to query.
        required: true
        schema:
          $ref: '#/definitions/ResourceType'
    responses:
      '200':
        description: Query result.
        content:
          application/json:
            schema:
              $ref: '#/definitions/ResolverResources'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'

requestBodies:
  Site:
    content:
      application/json:
        schema:
          $ref: '#/definitions/Site'
    description: Site object.
    required: true

definitions:
  SiteWithStatusList:
    allOf:
      - $ref: './common.yml#/definitions/ResultList'
      - type: object
        description: Represents a list of Sites with their health status.
        properties:
          data:
            type: array
            description: List of Sites with their health status.
            items:
              $ref: '#/definitions/SiteWithStatus'
  SiteWithStatus:
    allOf:
      - $ref: '#/definitions/Site'
      - type: object
        description: Represents a Site with its health status.
        properties:
          status:
            type: string
            description: Health status of the Site. Depends on the status of the Appliances in this Site.
            enum:
              - healthy
              - warning
              - unhealthy
              - n/a
  SiteList:
    allOf:
      - $ref: './common.yml#/definitions/ResultList'
      - type: object
        description: Represents a list of Sites.
        properties:
          data:
            type: array
            description: List of Sites.
            items:
              $ref: '#/definitions/Site'
  Site:
    allOf:
      - $ref: './common.yml#/definitions/BaseEntity'
      - type: object
        description: Represents a Site.
        properties:
          shortName:
            type: string
            description: A short 4 letter name for the Site to be displayed on the Client.
            example: AZU1
          description:
            type: string
            description: Description of the Site to be displayed on the Client.
            example: Gives access to Azure endpoints.
          geolocation:
            type: object
            description: Geolocation of the Site.
            properties:
              latitude:
                type: number
              longitude:
                type: number
          networkSubnets:
            type: array
            description: >-
              Network subnets in CIDR format to define the Site's boundaries.
              They are added as routes by the Client.
            items:
              type: string
              example: 10.0.0.0/16
          fallbackSite:
            type: string
            format: uuid
            x-uuid-ref: Site
            description: >-
              When the Client fails to connect to the Site for a certain period of time,
              configured Entitlements (see Policy) will be moved to this "Fallback" Site.
            example: 4c07bc67-57ea-42dd-b702-c2d6c45419fc
          localSiteDetection:
            type: object
            description: Local Site Detection feature settings.
            properties:
              enabled:
                type: boolean
                description: Enables the Local Site Detection feature.
                default: false
              publicIps:
                type: array
                description: >-
                  The public IPs of the clients that will be considered local to this Site. 
                  Those clients will connect to Gateways with the configured local hostname and local weights in Appliance configuration.
                items:
                  type: string
                  example: 200.200.200.200
          useForNearestSiteSelection:
            type: boolean
            description: If enabled, this Site will be included in the nearest Site override selection in Policies.
          ipPoolMappings:
            type: array
            description: >-
              List of IP Pool mappings for this specific Site.
              When IPs are allocated this Site, they will be mapped to a new one using this setting.
            items:
              type: object
              properties:
                from:
                  type: string
                  format: uuid
                  x-uuid-ref: IpPool
                  description: >-
                    IP Pool ID to map from.
                    If a user is authorizing with this IP Pool via Identity Provider assignment and has access to this
                    Site, mapping will occur for that user.
                  example: 4c07bc67-57ea-42dd-b702-c2d6c45419fc
                to:
                  type: string
                  format: uuid
                  x-uuid-ref: IpPool
                  description: IP Pool ID to map to.
                  example: 8c07bc67-5711-42dd-b702-c2d6c45419f8
                type:
                  type: string
                  description: Mapping type.
                  default: Translation
                  enum:
                    - Translation
                    - Allocation
          defaultGateway:
            type: object
            description: Default Gateway configuration.
            properties:
              enabledV4:
                type: boolean
                description: When enabled, the Client uses this Site as the Default Default for all IPV4 traffic.
                default: false
              enabledV6:
                type: boolean
                description: When enabled, the Client uses this Site as the Default Default for all IPv6 traffic.
                default: false
              excludedSubnets:
                type: array                
                description: >-
                  Network subnets to exclude when Default Gateway is enabled.
                  The traffic for these subnets will not go through the Gateway in this Site.                  
                items:
                  type: string
                  example: 10.0.10.0/24
          entitlementBasedRouting:
            type: boolean
            description: >-
              When enabled, the routes are sent to the Client by the Gateways according to the user's Entitlements
              "networkSubnets" should be left be empty if it's enabled.
            default: false
          vpn:
            type: object
            description: VPN configuration for this Site.
            properties:
              snat:
                type: boolean
                description: Source NAT.
                default: false
              tls:
                type: object
                description: VPN over TLS protocol configuration.
                properties:
                  enabled:
                    type: boolean
                    default: true
                  version:
                    type: string
                    description: TLS version.
                    default: TLSv23
                    enum:
                      - TLSv1.2
                      - TLSv1.3
                      - TLSv23
              dtls:
                type: object
                description: VPN over DTLS protocol configuration.
                properties:
                  enabled:
                    type: boolean
                    default: false
              routeVia:
                type: object
                description: Override routing for tunnel traffic.
                properties:
                  ipv4:
                    type: string
                    description: IPv4 address for routing tunnel traffic.
                    example: 10.0.0.2
                  ipv6:
                    type: string
                    description: IPv6 address for routing tunnel traffic.
                    example: '2001:db8:0:0:0:ff00:42:8329'
              urlAccessEnabled:
                type: boolean
                description: Whether to enable URL Access feature or not.
              urlAccessP12s:
                type: array
                description: P12 files for proxying traffic for URL Access feature.
                items:
                  allOf:
                    - $ref: 'appliance.yml#/definitions/P12'
                    - type: object
                      properties:
                        verifyUpstream:
                          type: boolean
                          description: Gateway will verify upstream certificate of the endpoints.
                          default: true
              ipAccessLogIntervalSeconds:
                type: number
                description: Frequency configuration for generating IP Access audit logs for a connection.
                default: 120
              logNatIpAndNatPort:
                type: boolean
                description: Whether to log NAT traffic or not.
                default: false
          nameResolution:
            type: object
            description: Settings for asset name resolution.
            properties:
              useHostsFile:
                type: boolean
                description: Name resolution to use Appliance's /etc/hosts file.
                default: false
              dnsResolvers:
                type: array
                description: Resolver to resolve hostnames using DNS servers.
                items:
                  type: object
                  required:
                    - name
                    - servers
                  properties:
                    name:
                      type: string
                      description: Identifier name. Has no functional effect.
                      example: DNS Resolver 1
                    updateInterval:
                      type: integer
                      description: How often will the resolver poll the server. In seconds.
                      default: 60
                    queryAAAA:
                      type: boolean
                      description: Perform AAAA lookups.
                      default: false
                    defaultTtlSeconds:
                      type: integer
                      description: This will apply whenever Gateway gets a DNS response which has no TTL set.
                      default: 300
                    servers:
                      type: array
                      description: DNS Server addresses that will be used to resolve hostnames within the Site.
                      items:
                        type: string
                        example: 10.0.0.2
                    matchDomains:
                      type: array
                      description: The DNS resolver will only attempt to resolve names matching the match domains. If match domains are not specified the DNS resolver will attempt to resolve all hostnames.
                      items:
                        type: string
                        example: company.com
              awsResolvers:
                type: array
                description: Resolvers to resolve Amazon machines by querying Amazon Web Services.
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: Identifier name. Has no functional effect.
                      example: AWS Resolver 1
                    updateInterval:
                      type: integer
                      description: How often will the resolver poll the server. In seconds.
                      default: 60
                    vpcs:
                      type: array
                      description: VPC IDs to resolve names.
                      items:
                        type: string
                    vpcAutoDiscovery:
                      type: boolean
                      description: Use VPC auto discovery.
                    regions:
                      type: array
                      description: Amazon regions.
                      items:
                        type: string
                        example: eu-west-2
                    useIAMRole:
                      type: boolean
                      description: Uses the built-in IAM role in AWS instances to authenticate against the API.
                    accessKeyId:
                      type: string
                      description: ID of the access key.
                    secretAccessKey:
                      type: string
                      description: Secret access key for accessKeyId.
                      writeOnly: true
                    httpsProxy:
                      type: string
                      description: >-
                        Proxy address to use while communicating with AWS.
                        format: https://username:password@ip/hostname:port
                    resolveWithMasterCredentials:
                      type: boolean
                      description: Use master credentials to resolve names in addition to any assumed roles.
                    partition:
                      type: string
                      description: What AWS partition to use such as 'aws-cn' or 'aws-us-gov'
                      default: aws
                    assumedRoles:
                      type: array
                      description: Roles to be assumed to perform AWS name resolution.
                      items:
                        type: object
                        properties:
                          accountId:
                            type: string
                            description: AWS account ID.
                          roleName:
                            type: string
                            description: AWS role name
                          externalId:
                            type: string
                            description: AWS role external id.
                          regions:
                            type: array
                            description: AWS regions.
                            items:
                              type: string
              azureResolvers:
                type: array
                description: Resolvers to resolve Azure machines by querying Azure App Service.
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: Identifier name. Has no functional effect.
                    updateInterval:
                      type: integer
                      description: How often will the resolver poll the server. In seconds.
                      default: 60
                    useManagedIdentities:
                      type: boolean
                      description: Uses the built-in Managed Identities in Azure instances to authenticate against the API.
                      default: false
                    subscriptionId:
                      type: string
                      description: Azure subscription id, visible with the azure cli command `azure account show`. Deprecated as of 6.2.
                      deprecated: true
                    tenantId:
                      type: string
                      description: Azure tenant id, visible with the azure cli command `azure account show`.
                    clientId:
                      type: string
                      description: >-
                        Azure client id, also called app id. Visible for a given application using the azure cli command
                        `azure ad app show`.
                    secret:
                      type: string
                      description: >-
                        Azure client secret. For Azure AD Apps this is done by
                        creating a key for the app.
                      writeOnly: true
              esxResolvers:
                type: array
                description: Resolvers to resolve VMware vSphere machines by querying the vCenter.
                items:
                  type: object
                  required:
                    - name
                    - hostname
                    - username
                  properties:
                    name:
                      type: string
                      description: Identifier name. Has no functional effect.
                    updateInterval:
                      type: integer
                      description: How often will the resolver poll the server. In seconds.
                      default: 60
                    hostname:
                      type: string
                      description: Hostname of the vCenter.
                    username:
                      type: string
                      description: Username with admin access to the vCenter.
                    password:
                      type: string
                      description: Password for the username.
                      writeOnly: true
              gcpResolvers:
                type: array
                description: Resolvers to resolve GCP machine by querying Google web services.
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: Identifier name. Has no functional effect.
                    updateInterval:
                      type: integer
                      description: How often will the resolver poll the server. In seconds.
                      default: 60
                    projectFilter:
                      type: string
                      description: GCP project filter.
                    instanceFilter:
                      type: string
                      description: GCP instance filter.
                    forwardingRulesFilter:
                      type: string
                      description: GCP forwarding rules filter.
              illumioResolvers:
                type: array
                description: Resolvers to resolve names by querying Appgate Illumio Resolver.
                items:
                  type: object
                  required:
                    - name
                    - orgId
                    - hostname
                    - port
                    - username
                  properties:
                    name:
                      type: string
                      description: Identifier name. Has no functional effect.
                    updateInterval:
                      type: integer
                      description: How often will the resolver poll the server. In seconds.
                      default: 60
                    orgId:
                      type: string
                      description: Organization ID of the Illumio Resolver.
                    hostname:
                      type: string
                      description: Hostname of the Illumio Resolver.
                    port:
                      type: integer
                      description: Port number of the Illumio Resolver.
                    username:
                      type: string
                      description: Username with access to the Illumio Resolver.
                    password:
                      type: string
                      description: Password for the username.
                      writeOnly: true
              dnsForwarding:
                type: object
                description: Enable DNS Forwarding feature.
                required:
                  - dnsServers
                  - allowDestinations
                properties:
                  siteIpv4:
                    type: string
                    description: DNS Forwarder Site IPv4 address.
                    example: 100.110.0.0
                  siteIpv6:
                    type: string
                    description: DNS Forwarder Site IPv6 address.
                    example: '2001:db8:0:0:0:ff00:42:8329'
                  dnsServers:
                    type: array
                    description: DNS Servers to use for resolving endpoints.
                    items:
                      type: string
                    example:
                      - '172.17.18.19'
                      - '192.100.111.31'
                  allowDestinations:
                    $ref: './appliance.yml#/definitions/AllowResources'
                  defaultTtlSeconds:
                    type: integer
                    description: This will apply whenever Gateway gets a DNS response which has no TTL set.
                    default: 300
  ResolverResources:
    allOf:
      - $ref: './common.yml#/definitions/ResultList'
      - type: object
        description: Resource query result.
        properties:
          data:
            type: array
            description: List of queries resources.
            items:
              type: string
              example: test-web-server
          resolver:
            $ref: '#/definitions/ResolverType'
          type:
            $ref: '#/definitions/ResourceType'
          gatewayName:
            type: string
            description: The name of the Gateway which returned the result.
  ResolverType:
    type: string
    description: Resolver type.
    enum:
      - aws
      - azure
      - gcp
      - illumio
      - esx
  ResourceType:
    type: string
    description: Resource type.
    enum:
      - instances-security-groups
      - instances-tags
      - lbs
      - lbs-security-groups
      - lbs-tags
      - lbsv2
      - lbsv2-security-groups
      - lbvs2-tags
      - enis-security-groups
      - enis-security-groups-ids
      - enis-tags
      - regions
      - accounts
      - network-security-groups
      - network-security-groups-tags
      - virtual-machines-tags
      - virtual-networks
      - subnets
      - projects-ids
      - forwarding-rules
      - instances
      - instances-network-tags
      - service-account-emails
      - labels
      - virtual-machines
      - folders
      - resources-pools
      - tags
