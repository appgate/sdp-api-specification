secrets:
  get:
    summary: List all Secrets.
    description: List all Secrets visible to current user.
    tags:
      - Secrets Manager
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/query'
      - $ref: './common.yml#/parameters/range'
      - $ref: './common.yml#/parameters/orderBy'
      - $ref: './common.yml#/parameters/descending'
      - $ref: './common.yml#/parameters/filterBy'
    responses:
      '200':
        description: List of Secrets.
        content:
          application/json:
            schema:
              $ref: '#/definitions/SecretList'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
  post:
    summary: Create a new Secret.
    description: Create a new Secret.
    tags:
      - Secrets Manager
    responses:
      '200':
        description: Created Secret.
        content:
          application/json:
            schema:
              $ref: '#/definitions/Secret'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '409':
        $ref: './common.yml#/responses/ConflictError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/SecretCreate'
secrets-id:
  get:
    summary: Get a specific Secret.
    description: Get a specific Secret.
    tags:
      - Secrets Manager
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Single Secret.
        content:
          application/json:
            schema:
              $ref: '#/definitions/Secret'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
  put:
    summary: Update an existing Secret.
    description: Update an existing Secret.
    tags:
      - Secrets Manager
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: Updated Secret.
        content:
          application/json:
            schema:
              $ref: '#/definitions/Secret'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/Secret'
  delete:
    summary: Delete a specific Secret.
    description: Delete a specific Secret.
    tags:
      - Secrets Manager
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '204':
        description: Secret was deleted successfully.
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'

requestBodies:
  Secret:
    content:
      application/json:
        schema:
          $ref: '#/definitions/Secret'
    description: Secret object.
    required: true
  SecretCreate:
    content:
      application/json:
        schema:
          allOf:
            - $ref: '#/definitions/Secret'
            - required:
                - secret
    description: Secret object.
    required: true

definitions:
  SecretList:
    allOf:
      - $ref: './common.yml#/definitions/ResultList'
      - type: object
        description: Represents a list of Secrets.
        properties:
          data:
            type: array
            description: List of Secrets.
            items:
              $ref: '#/definitions/Secret'
  Secret:
    allOf:
      - $ref: './common.yml#/definitions/BaseEntity'
      - type: object
        description: Represents a Secret.
        properties:
          secret:
            type: string
            format: password
            writeOnly: true
            description: Secret string to store in Controller. Omit the field to keep the old password when updating a user.
            example: 'tSW3!QBv(rj{UuLY'
