identity-providers:
  get:
    summary: List all Identity Providers.
    description: List all Identity Providers visible to current user.
    tags:
      - Identity Providers
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/query'
      - $ref: './common.yml#/parameters/range'
      - $ref: './common.yml#/parameters/orderBy'
      - $ref: './common.yml#/parameters/descending'
      - $ref: './common.yml#/parameters/filterBy'
    responses:
      '200':
        description: List of Identity Providers.
        content:
          application/json:
            schema:
              $ref: '#/definitions/IdentityProviderList'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
  post:
    summary: Create a new Identity Provider.
    description: Create a new Identity Provider.
    tags:
      - Identity Providers
    parameters:
      - $ref: './common.yml#/parameters/authorization'
    responses:
      '200':
        $ref: '#/responses/IdentityProvider'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '409':
        $ref: './common.yml#/responses/ConflictError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/IdentityProvider'
identity-providers-id:
  get:
    summary: Get a specific Identity Provider.
    description: Get a specific Identity Provider.
    tags:
      - Identity Providers
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        $ref: '#/responses/IdentityProvider'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
  put:
    summary: Update an existing Identity Provider.
    description: Update an existing Identity Provider.
    tags:
      - Identity Providers
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        $ref: '#/responses/IdentityProvider'
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      $ref: '#/requestBodies/IdentityProvider'
  delete:
    summary: Delete a specific Identity Provider.
    description: Delete a specific Identity Provider.
    tags:
      - Identity Providers
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '204':
        description: Identity Provider was deleted successfully.
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
identity-providers-test:
  post:
    summary: Test an Identity Provider connection.
    description: Test connection for the given Identity Provider JSON.
    tags:
      - Identity Providers
    parameters:
      - $ref: './common.yml#/parameters/authorization'
    responses:
      '200':
        description: Test result.
        content:
          application/json:
            schema:
              properties:
                success:
                  type: boolean
                  description: Whether the connection succeeded or not.
                  example: false
                error:
                  type: boolean
                  description: The error text if the connection fails.
                  example: Connection timed out.
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
    requestBody:
      $ref: '#/requestBodies/IdentityProvider'
identity-providers-id-attributes:
  post:
    summary: Get user attributes from an existing Identity Provider.
    description: Get raw attributes and mapped claims for a user.
    tags:
      - Identity Providers
    parameters:
      - $ref: './common.yml#/parameters/authorization'
      - $ref: './common.yml#/parameters/id'
    responses:
      '200':
        description: User attributes.
        content:
          application/json:
            schema:
              properties:
                rawAttributes:
                  type: object
                  description: The attributes received and unchanged by the Identity Provider.
                  additionalProperties:
                    type: array
                    items:
                      type: string
                  example:
                    samAccountName:
                      - username
                    upn:
                      - username@company.com
                mappedAttributes:
                  type: object
                  description: The attributes received and mapped by the Identity Provider according to claimMappings.
                  additionalProperties:
                    type: string
                  example:
                    username: username
      '400':
        $ref: './common.yml#/responses/JsonError'
      '401':
        $ref: './common.yml#/responses/TokenError'
      '403':
        $ref: './common.yml#/responses/PermissionError'
      '404':
        $ref: './common.yml#/responses/NotFoundError'
      '406':
        $ref: './common.yml#/responses/NotAcceptableError'
      '422':
        $ref: './common.yml#/responses/ValidationError'
      '500':
        $ref: './common.yml#/responses/UnexpectedError'
    requestBody:
      description: User details to get attributes for.
      content:
        application/json:
          schema:
            properties:
              username:
                type: string
                description: Required for Ldap, Radius and LocalDatabase providers.
                example: username
              password:
                type: string
                description: Required for Radius provider.
                example: 'tSW3!QBv(rj{UuLY'
              samlResponse:
                type: string
                description: A sample SAML token to extract attributes from. Required for SAML provider.

responses:
  IdentityProvider:
    content:
      application/json:
        schema:
          $ref: '#/definitions/IdentityProvider'
    description: Identity Provider object.

requestBodies:
  IdentityProvider:
    content:
      application/json:
        schema:
          $ref: '#/definitions/IdentityProvider'
    description: Identity Provider object.
    required: true

definitions:
  IdentityProviderList:
    allOf:
      - $ref: './common.yml#/definitions/ResultList'
      - type: object
        description: Represents a list of Identity Providers.
        properties:
          data:
            type: array
            description: List of Identity Providers.
            items:
              $ref: '#/definitions/IdentityProvider'
  IdentityProvider:
    type: object
    discriminator:
      propertyName: type
      mapping:
        Saml: '#/definitions/SamlProvider'
        Oidc: '#/definitions/OidcProvider'
        Radius: '#/definitions/RadiusProvider'
        Ldap: '#/definitions/LdapProvider'
        LdapCertificate: '#/definitions/LdapCertificateProvider'
        LocalDatabase: '#/definitions/LocalDatabaseProvider'
        ServiceDatabase: '#/definitions/ServiceDatabaseProvider'
        Connector: '#/definitions/ConnectorProvider'
    required:
      - type
  BaseIdentityProvider:
    allOf:
      - $ref: './common.yml#/definitions/BaseEntity'
      - type: object
        description: Represents an Identity Provider.
        required:
          - type
        properties:
          type:
            type: string
            description: The type of the Identity Provider.
            enum:
              - LocalDatabase
              - ServiceDatabase
              - Ldap
              - LdapCertificate
              - Radius
              - Saml
              - Connector
              - Oidc
          ipPoolV4:
            type: string
            format: uuid
            x-uuid-ref: IpPool
            description: >-
              The IPv4 Pool ID the users in this Identity Provider are going to use to allocate IP addresses for
              the tunnels.
          ipPoolV6:
            type: string
            format: uuid
            x-uuid-ref: IpPool
            description: >-
              The IPv6 Pool ID the users in this Identity Provider are going to use to allocate IP addresses for
              the tunnels.
          claimMappings:
            $ref: '#/definitions/ClaimMappings'
          userScripts:
            $ref: '#/definitions/UserScripts'
  ConfigurableIdentityProvider:
    allOf:
      - $ref: '#/definitions/BaseIdentityProvider'
      - $ref: '#/definitions/DnsSettings'
      - $ref: '#/definitions/DeviceLimitPerUser'
      - type: object
        properties:
          adminProvider:
            type: boolean
            description: Whether the provider will be listed in the Admin UI or not.
            default: false
          onBoarding2FA:
            type: object
            description: On-boarding two-factor authentication settings. Leave it empty keep it disabled.
            required:
              - mfaProviderId
            properties:
              mfaProviderId:
                type: string
                format: uuid
                x-uuid-ref: MfaProvider
                description: MFA provider ID to use for the authentication.
              message:
                type: string
                description: On-boarding MFA message to be displayed on the Client UI during the second-factor authentication.
                example: Please use your multi factor authentication device to on-board.
              claimSuffix:
                type: string
                description: Upon successful on-boarding, the claim will be added as if MFA remedy action is fulfilled.
                default: onBoarding
              alwaysRequired:
                type: boolean
                description: If enabled, MFA will be required on every authentication.
          inactivityTimeoutMinutes:
            type: integer
            description: (Desktop) clients will sign out automatically after the user has been inactive on the device for the configured duration. Set it to 0 to disable.
            default: 0
          networkInactivityTimeoutEnabled:
            type: boolean
            description: Whether or not to take network inactivity into account when measuring client inactivity timeout.
            default: false
          enforceWindowsNetworkProfileAsDomain:
            type: boolean
            description: If enabled, Windows Client will configure the network profile as "DomainAuthenticated".
          blockLocalDnsRequests:
            type: boolean
            description: Whether the Windows Client will block local DNS requests or not.
            default: false
          onDemandClaimMappings:
            $ref: '#/definitions/OnDemandClaimMappings'
  DeviceLimitPerUser:
    type: object
    properties:
      deviceLimitPerUser:
        type: integer
        description: The device limit per user. The existing on-boarded devices will still be able to sign in even if the limit is exceeded.
        default: 100
  DnsSettings:
    type: object
    properties:
      dnsServers:
        type: array
        deprecated: true
        description: >-
          The DNS servers to be assigned to the Clients of the users in this Identity Provider.
          Deprecated as of 6.4. Use either the Automatic Client DNS feature in Site DNS resolvers or DNS Policies.
        items:
          type: string
        example:
          - '172.17.18.19'
          - '192.100.111.31'
      dnsSearchDomains:
        type: array
        deprecated: true
        description: >-
          The DNS search domains to be assigned to Clients of the users in this Identity Provider.
          Deprecated as of 6.4. Use either the Automatic Client DNS feature in Site DNS resolvers or DNS Policies.
        items:
          type: string
        example:
          - 'internal.company.com'
  ClaimMappings:
    type: array
    description: The mapping of Identity Provider attributes to claims.
    items:
      type: object
      required:
        - attributeName
        - claimName
      properties:
        attributeName:
          type: string
          description: The name of the attribute coming from the Identity Provider.
          example: 'SAMAccountName'
        claimName:
          type: string
          description: The name of the user claim to be used in Appgate SDP.
          example: 'username'
        list:
          type: boolean
          description: Whether the claim is expected to be a list and have multiple values or not.
          default: false
        encrypt:
          type: boolean
          description: Whether the claim should be encrypted or not.
          default: false
  OnDemandClaimMappings:
    type: array
    description: The mapping of Identity Provider on demand attributes to claims.
    items:
      type: object
      required:
        - command
        - claimName
        - platform
      properties:
        command:
          type: string
          description: The name of the command.
          enum:
            - fileSize
            - fileExists
            - fileCreated
            - fileUpdated
            - fileVersion
            - fileSha512
            - processRunning
            - serviceRunning
            - regExists
            - regQuery
            - runScript
        claimName:
          type: string
          description: The name of the device claim to be used in Appgate SDP.
          example: 'antivirusRunning'
        parameters:
          type: object
          description: Depending on the command type, extra parameters to pass to the on-demand claim.
          properties:
            name:
              type: string
              description: >-
                'Used for the following commands: "serviceRunning", "processRunning", "runScript". Name of the
                service, process or device claim script respectively.'
              example: 'python3'
            path:
              type: string
              description: >-
                'Used for the following commands: "fileSize", "fileExists", "fileCreated", "fileUpdated",
                "fileVersion", "fileSha512", "regExists", "regQuery".'
                Path for the file or registry.
              example: '/usr/bin/python3'
            args:
              type: string
              description: Used as device claim script args/parameters for "runScript" command.
              example: '--list'
        platform:
          type: string
          description: The platform(s) to run the on-demand claim.
          enum:
            - desktop.windows.all
            - desktop.macos.all
            - desktop.linux.all
            - desktop.all
            - mobile.android.all
            - mobile.ios.all
            - mobile.all
            - all
  UserScripts:
    type: array
    description: ID of the User Claim Scripts to run during authorization.
    items:
      type: string
      format: uuid
  LocalProviderSettings:
    type: object
    properties:
      userLockoutThreshold:
        type: integer
        description: After how many failed authentication attempts will a local user be locked out from authenticating again.
        default: 5
      userLockoutDurationMinutes:
        type: integer
        description: For how long lockout will last for local users.
        default: 1
      minPasswordLength:
        type: integer
        description: Minimum password length requirement for local users.
        default: 0
  ConnectorProvider:
    allOf:
      - $ref: '#/definitions/BaseIdentityProvider'
      - type: object
        description: Represents a Connector Identity Provider.
  LocalDatabaseProvider:
    allOf:
      - $ref: '#/definitions/ConfigurableIdentityProvider'
      - $ref: '#/definitions/LocalProviderSettings'
      - type: object
        description: Represents a Local Database Identity Provider.
  ServiceDatabaseProvider:
    allOf:
      - $ref: '#/definitions/BaseIdentityProvider'
      - $ref: '#/definitions/DnsSettings'
      - $ref: '#/definitions/DeviceLimitPerUser'
      - $ref: '#/definitions/LocalProviderSettings'
      - type: object
        description: Represents a Service Database Identity Provider.
  SamlProvider:
    allOf:
      - $ref: '#/definitions/ConfigurableIdentityProvider'
      - type: object
        description: Represents a SAML Identity Provider.
        required:
          - redirectUrl
          - issuer
          - audience
          - providerCertificate
        properties:
          redirectUrl:
            type: string
            description: >-
              The URL to redirect the user browsers to authenticate against the SAML Server.
              Also known as Single Sign-on URL. AuthNRequest will be added automatically.
            example: 'https://saml.company.com'
          issuer:
            type: string
            description: SAML issuer ID to make sure the sender of the Token is the expected SAML provider.
            example: 'http://adfs-test.company.com/adfs/services/trust'
          audience:
            type: string
            description: SAML audience to make sure the recipient of the Token is this Controller.
            example: Company Appgate SDP
          providerCertificate:
            type: string
            description: The certificate of the SAML provider to verify the SAML tokens. In PEM format.
            example: |-
              -----BEGIN CERTIFICATE-----
              ....
              -----END CERTIFICATE-----
          decryptionKey:
            type: string
            description: The private key to decrypt encrypted assertions if there is any. In PEM format.
          forceAuthn:
            type: boolean
            description: >-
              Enables ForceAuthn flag in the SAML Request.
              If the SAML Provider supports this flag, it will require user to enter their credentials every time Client requires SAML authentication.
  OidcProvider:
    allOf:
      - $ref: '#/definitions/ConfigurableIdentityProvider'
      - type: object
        description: Represents an OIDC Identity Provider.
        required:
          - issuer
          - audience
        properties:
          issuer:
            type: string
            description: OIDC issuer URL.
            example: 'https://oidc-test.company.com/oauth2'
          audience:
            type: string
            description: Audience/Client ID to make sure the recipient of the Token is this Controller.
            example: "f01e4129-6593-448f-90df-86ddb165fc08"
          scope:
            type: string
            description: Scope to use for tokens.
            default: openid profile email offline_access
          google:
            type: object
            description: Google specific OIDC settings.
            properties:
              enabled:
                type: boolean
                description: Whether to enable Google OIDC settings or not.
                default: false
              clientSecret:
                type: string
                description: Client secret.
                writeOnly: true
              refreshToken:
                type: boolean
                description: Whether to enable refresh token with Google OIDC or not.
  RadiusProvider:
    allOf:
      - $ref: '#/definitions/ConfigurableIdentityProvider'
      - type: object
        description: Represents a Radius Identity Provider.
        required:
          - hostnames
          - sharedSecret
        properties:
          hostnames:
            type: array
            description: Hostnames/IP addresses to connect.
            items:
              type: string
            example:
              - 'radius.company.com'
          port:
            type: integer
            description: Port to connect.
            default: 1812
          sharedSecret:
            type: string
            writeOnly: true
            description: Radius shared secret to authenticate to the server.
          authenticationProtocol:
            type: string
            description: Radius protocol to use while authenticating users.
            enum:
              - PAP
              - CHAP
            default: CHAP
  LdapProvider:
    allOf:
      - $ref: '#/definitions/ConfigurableIdentityProvider'
      - type: object
        description: Represents an LDAP Identity Provider.
        required:
          - hostnames
          - port
          - adminDistinguishedName
        properties:
          hostnames:
            type: array
            description: Hostnames/IP addresses to connect.
            items:
              type: string
            example:
              - 'dc.ad.company.com'
          port:
            type: integer
            description: Port to connect.
            example: 389
          sslEnabled:
            type: boolean
            description: Whether to use LDAPS protocol or not.
            default: false
          adminDistinguishedName:
            type: string
            description: The Distinguished Name to login to LDAP and query users with.
            example: 'CN=admin,OU=Users,DC=company,DC=com'
          adminPassword:
            type: string
            description: The password to login to LDAP and query users with. Required on creation.
            writeOnly: true
            example: 'tSW3!QBv(rj{UuLY'
          baseDn:
            type: string
            description: The subset of the LDAP server to search users from. If not set, root of the server is used.
            example: 'OU=Users,DC=company,DC=com'
          objectClass:
            type: string
            deprecated: true
            description: >-
              The object class of the users to be authenticated and queried.
              This field is translated to '(objectClass=value)' as user filter.
              Deprecated as of 6.2. Use userFilter instead.
            example: 'user'
          userFilter:
            type: string
            description: The LDAP filter to apply when searching for user during authentication.
            example: '(objectClass=user)'
          usernameAttribute:
            type: string
            description: The name of the attribute to get the exact username from the LDAP server.
            default: 'sAMAccountName'
          membershipFilter:
            type: string
            description: The filter to use while querying users' nested groups.
            default: '(objectCategory=group)'
          membershipBaseDn:
            type: string
            description: The subset of the LDAP server to search groups from. If not set, "baseDn" is used.
            example: 'OU=Groups,DC=company,DC=com'
          passwordWarning:
            type: object
            description: Password warning configuration for Active Directory. If enabled, the client will display the configured message before the password expiration.
            properties:
              enabled:
                type: boolean
                description: Whether to check and warn the users for password expiration.
              thresholdDays:
                type: integer
                description: How many days before the password warning to be displayed to the user.
                default: 5
              message:
                type: string
                description: >-
                  The given message will be displayed to the user.
                  Use this field to guide the users on how to change their passwords.
                  The expiration time will displayed on the client on a separate section.
                example: Your password is about to expire. Please change it.
  LdapCertificateProvider:
    allOf:
      - $ref: '#/definitions/LdapProvider'
      - type: object
        description: Represents an LDAP Certificate Identity Provider.
        required:
          - caCertificates
        properties:
          caCertificates:
            type: array
            description: CA certificates to verify the Client certificates. In PEM format.
            items:
              type: string
            example:
              - >-
                -----BEGIN CERTIFICATE-----
                ....
                -----END CERTIFICATE-----
          certificateUserAttribute:
            type: string
            description: The LDAP attribute to compare the Client certificate's Subject Alternative Name.
            default: userPrincipalName
          certificateAttribute:
            type: string
            description: The LDAP attribute to compare the Client certificate binary. Leave it null to skip this comparison.
          skipX509ExternalChecks:
            type: boolean
            description: >-
              By default, Controller contacts the endpoints on the certificate extensions in order to verify revocation status and pull the intermediate CA certificates.
              Set this flag in order to skip them.
          certificatePriorities:
            type: array
            description: Client will order the available certificates according to the given priority list.
            items:
              type: object
              required:
                - value
              properties:
                type:
                  type: string
                  description: Which attribute to compare.
                  enum:
                    - Template
                    - Issuer
                  default: Template
                value:
                  type: string
                  description: The value to compare to the certificate attribute.
                  example: 1.3.6.1.4.1.311.21.8.3025710.4393146.2181807.13924342.9568199.8
